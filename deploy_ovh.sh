#!/bin/bash

# üöÄ Script de d√©ploiement automatique Pedantix OVH
# Ex√©cute ce script UNE SEULE FOIS apr√®s avoir pull√© le repo

echo "üöÄ D√©ploiement automatique Pedantix sur OVH"
echo "============================================="

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# V√©rifier l'environnement
log_info "1. V√©rification de l'environnement..."
if ! command -v php &> /dev/null; then
    log_error "PHP n'est pas disponible. V√©rifiez votre configuration OVH."
    exit 1
fi

PHP_VERSION=$(php -v | head -n 1 | cut -d ' ' -f 2 | cut -d '.' -f 1,2)
log_info "Version PHP: $PHP_VERSION"

if [[ "$PHP_VERSION" < "8.1" ]]; then
    log_warning "PHP 8.1+ recommand√©. Version actuelle: $PHP_VERSION"
fi

# Configuration automatique .env
log_info "2. Configuration automatique..."
if [ ! -f .env ]; then
    cp .env.prod .env
    log_info "Fichier .env configur√© automatiquement avec vos param√®tres OVH"
else
    log_warning "Fichier .env existe d√©j√† - pr√©servation de la configuration existante"
fi

# Installation Composer si n√©cessaire
log_info "3. Installation de Composer..."
if [ ! -f composer.phar ]; then
    log_info "T√©l√©chargement de Composer..."
    curl -sS https://getcomposer.org/installer | php
    if [ $? -ne 0 ]; then
        log_error "√âchec du t√©l√©chargement de Composer"
        exit 1
    fi
fi

# Installation des d√©pendances
log_info "4. Installation des d√©pendances..."
php composer.phar install --no-dev --optimize-autoloader --no-interaction
if [ $? -ne 0 ]; then
    log_error "√âchec de l'installation des d√©pendances"
    exit 1
fi

# D√©ploiement complet
log_info "5. D√©ploiement complet (migrations + articles Wikipedia)..."
php bin/console app:deploy prod
if [ $? -ne 0 ]; then
    log_error "√âchec du d√©ploiement"
    exit 1
fi

# Configuration des permissions
log_info "6. Configuration des permissions..."
chmod -R 755 var/cache var/log 2>/dev/null || true

# Test de connexion √† la base
log_info "7. Test de la base de donn√©es..."
php bin/console doctrine:schema:validate --no-interaction >/dev/null 2>&1
if [ $? -eq 0 ]; then
    log_info "‚úÖ Connexion √† la base de donn√©es OK"
else
    log_warning "‚ö†Ô∏è Probl√®me potentiel avec la base de donn√©es"
fi

# Compter les articles
ARTICLE_COUNT=$(php bin/console doctrine:query:sql 'SELECT COUNT(*) as count FROM wikipedia_article' --quiet 2>/dev/null | tail -n 1 | awk '{print $1}' || echo "?")

log_info "8. V√©rification finale..."
php bin/console debug:container --env=prod >/dev/null 2>&1
if [ $? -eq 0 ]; then
    echo ""
    echo "üéâ D√âPLOIEMENT R√âUSSI !"
    echo "======================="
    echo "üìä Statistiques :"
    echo "   - Articles Wikipedia : $ARTICLE_COUNT"
    echo "   - URL : http://analantix.ovh"
    echo "   - Base de donn√©es : analanjroot"
    echo ""
    echo "üéØ Votre Pedantix est op√©rationnel !"
    echo "   - Plus de 150 articles Wikipedia disponibles"
    echo "   - Modes Comp√©tition et Coop√©ration"
    echo "   - Nouvelles parties automatiques"
    echo ""
    echo "‚ö†Ô∏è IMPORTANT :"
    echo "   - Configurez votre serveur web pour pointer vers public/"
    echo "   - Activez HTTPS si possible"
    echo "   - Supprimez ce script apr√®s le premier d√©ploiement"
else
    log_error "Erreur lors de la v√©rification finale"
    exit 1
fi
