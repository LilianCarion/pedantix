<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Pedantix - Jeu de mots Wikipedia{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>üß†</text></svg>">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <!-- Font Awesome -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

        <style>
            body {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }

            .game-container {
                background: rgba(255, 255, 255, 0.95);
                border-radius: 15px;
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
                backdrop-filter: blur(10px);
            }

            .word-input {
                border: 2px solid #e0e0e0;
                border-radius: 10px;
                padding: 15px;
                font-size: 1.1em;
                transition: all 0.3s ease;
            }

            .word-input:focus {
                border-color: #667eea;
                box-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
            }

            .found-word {
                background: linear-gradient(45deg, #4CAF50, #45a049);
                color: white;
                padding: 8px 15px;
                margin: 5px;
                border-radius: 20px;
                display: inline-block;
                font-weight: 500;
                box-shadow: 0 2px 10px rgba(76, 175, 80, 0.3);
                animation: fadeInScale 0.5s ease;
            }

            .proximity-high { background: linear-gradient(45deg, #FF9800, #F57C00); }
            .proximity-medium { background: linear-gradient(45deg, #FFC107, #FF8F00); }
            .proximity-low { background: linear-gradient(45deg, #9E9E9E, #757575); }

            @keyframes fadeInScale {
                from { opacity: 0; transform: scale(0.8); }
                to { opacity: 1; transform: scale(1); }
            }

            .btn-primary {
                background: linear-gradient(45deg, #667eea, #764ba2);
                border: none;
                border-radius: 10px;
                padding: 12px 30px;
                font-weight: 600;
                transition: all 0.3s ease;
            }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
            }

            .leaderboard-item {
                background: rgba(255, 255, 255, 0.8);
                border-left: 4px solid #667eea;
                margin-bottom: 10px;
                border-radius: 8px;
                transition: all 0.3s ease;
            }

            .leaderboard-item:hover {
                transform: translateX(5px);
                box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);
            }

            .hidden-word {
                background: #d0d0d0;
                color: #d0d0d0;
                border-radius: 3px;
                padding: 1px 2px;
                cursor: pointer;
                user-select: none;
                transition: all 0.3s ease;
            }

            .revealed-word {
                background: linear-gradient(45deg, #4CAF50, #45a049);
                color: white;
                border-radius: 3px;
                padding: 1px 2px;
                font-weight: 500;
                animation: revealWord 0.5s ease;
            }

            .title-word {
                background: linear-gradient(45deg, #FFD700, #FFA500) !important;
                color: #333 !important;
                font-weight: bold !important;
                font-size: 1.1em !important;
                padding: 2px 4px !important;
                box-shadow: 0 0 10px rgba(255, 215, 0, 0.5) !important;
            }

            .proximity-indicator {
                padding: 8px 15px;
                border-radius: 20px;
                display: inline-block;
                margin: 5px;
                font-weight: 500;
                animation: fadeInScale 0.5s ease;
            }

            .proximity-hot {
                background: linear-gradient(45deg, #FFEB3B, #FFC107) !important;
                color: #333 !important;
            }

            .proximity-warm {
                background: linear-gradient(45deg, #FF9800, #F57C00) !important;
                color: white !important;
            }

            .proximity-cold {
                background: linear-gradient(45deg, #9E9E9E, #757575) !important;
                color: white !important;
            }

            @keyframes revealWord {
                from {
                    background: #d0d0d0;
                    color: #d0d0d0;
                    transform: scale(1);
                }
                to {
                    background: linear-gradient(45deg, #4CAF50, #45a049);
                    color: white;
                    transform: scale(1.05);
                }
            }

            .confetti {
                position: fixed;
                top: -10px;
                left: 50%;
                transform: translateX(-50%);
                width: 10px;
                height: 10px;
                background: #f0f;
                animation: confetti-fall linear infinite;
                z-index: 1000;
            }

            @keyframes confetti-fall {
                to {
                    transform: translateX(-50%) translateY(100vh) rotate(720deg);
                }
            }
        </style>

        {% block stylesheets %}{% endblock %}
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-dark" style="background: rgba(0, 0, 0, 0.1);">
            <div class="container">
                <a class="navbar-brand fw-bold" href="{{ path('app_home') }}">
                    üß† Pedantix
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <div class="navbar-nav ms-auto">
                        <a class="nav-link" href="{{ path('app_home') }}">Accueil</a>
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#createRoomModal">Cr√©er une partie</a>
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#joinRoomModal">Rejoindre une partie</a>
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#rulesModal">R√®gles</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="container py-4">
            {% block body %}{% endblock %}
        </div>

        <!-- Create Room Modal -->
        <div class="modal fade" id="createRoomModal" tabindex="-1" aria-labelledby="createRoomModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createRoomModalLabel">Cr√©er une partie</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="createRoomForm">
                            <div class="mb-3">
                                <label for="wikipediaUrl" class="form-label">URL de l'article Wikip√©dia</label>
                                <input type="url" class="form-control" id="wikipediaUrl" name="wikipedia_url" placeholder="https://fr.wikipedia.org/wiki/..." required>
                                <div class="form-text">Collez l'URL d'un article Wikip√©dia fran√ßais</div>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Cr√©er la partie</button>
                        </form>
                        <div id="createRoomResult" class="mt-3" style="display: none;"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Join Room Modal -->
        <div class="modal fade" id="joinRoomModal" tabindex="-1" aria-labelledby="joinRoomModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="joinRoomModalLabel">Rejoindre une partie</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="joinRoomForm">
                            <div class="mb-3">
                                <label for="roomCode" class="form-label">Code de la partie</label>
                                <input type="text" class="form-control" id="roomCode" name="room_code" placeholder="Entrez le code √† 6 caract√®res" required>
                            </div>
                            <div class="mb-3">
                                <label for="playerName" class="form-label">Votre nom</label>
                                <input type="text" class="form-control" id="playerName" name="player_name" placeholder="Votre pseudo" required>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Rejoindre</button>
                        </form>
                        <div id="joinRoomResult" class="mt-3" style="display: none;"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Rules Modal -->
        <div class="modal fade" id="rulesModal" tabindex="-1" aria-labelledby="rulesModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="rulesModalLabel">R√®gles du jeu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <h5>Comment jouer √† Pedantix</h5>
                        <p>Devinez l'article Wikip√©dia en trouvant les mots qui le composent. Chaque mot trouv√© sera r√©v√©l√© dans l'article.</p>
                        <p>Contrairement au Pedantix original, vous pouvez jouer autant de parties que vous voulez et inviter vos amis √† jouer avec vous en partageant le code de la partie.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bootstrap JS Bundle with Popper -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

        <script>
            // Handle create room form
            document.getElementById('createRoomForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(this);
                const data = {
                    wikipedia_url: formData.get('wikipedia_url')
                };

                try {
                    const response = await fetch('{{ path('app_create_room') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    const resultDiv = document.getElementById('createRoomResult');

                    if (result.success) {
                        resultDiv.innerHTML = `
                            <div class="alert alert-success">
                                <h6>Partie cr√©√©e avec succ√®s !</h6>
                                <p><strong>Code de la partie :</strong> ${result.room_code}</p>
                                <p><strong>Article :</strong> ${result.title}</p>
                                <a href="/game/${result.room_code}" class="btn btn-primary btn-sm">Rejoindre la partie</a>
                            </div>
                        `;
                    } else {
                        resultDiv.innerHTML = `<div class="alert alert-danger">${result.error}</div>`;
                    }

                    resultDiv.style.display = 'block';
                } catch (error) {
                    document.getElementById('createRoomResult').innerHTML = `
                        <div class="alert alert-danger">Erreur lors de la cr√©ation de la partie</div>
                    `;
                    document.getElementById('createRoomResult').style.display = 'block';
                }
            });

            // Handle join room form
            document.getElementById('joinRoomForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(this);
                const data = {
                    room_code: formData.get('room_code'),
                    player_name: formData.get('player_name')
                };

                try {
                    const response = await fetch('{{ path('app_join_room') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    const resultDiv = document.getElementById('joinRoomResult');

                    if (result.success) {
                        // Redirect to game room
                        window.location.href = `/game/${data.room_code}`;
                    } else {
                        resultDiv.innerHTML = `<div class="alert alert-danger">${result.error}</div>`;
                        resultDiv.style.display = 'block';
                    }
                } catch (error) {
                    document.getElementById('joinRoomResult').innerHTML = `
                        <div class="alert alert-danger">Erreur lors de la connexion √† la partie</div>
                    `;
                    document.getElementById('joinRoomResult').style.display = 'block';
                }
            });
        </script>

        {% block javascripts %}{% endblock %}
    </body>
</html>
