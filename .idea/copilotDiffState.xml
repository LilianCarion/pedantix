<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/Controller/AdminController.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Controller/AdminController.php" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Controller;&#10;&#10;use App\Entity\GameSession;&#10;use App\Entity\Room;&#10;use App\Entity\WikipediaArticle;&#10;use App\Repository\GameSessionRepository;&#10;use App\Repository\RoomRepository;&#10;use App\Repository\WikipediaArticleRepository;&#10;use App\Service\PedantixService;&#10;use Doctrine\ORM\EntityManagerInterface;&#10;use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;&#10;use Symfony\Component\HttpFoundation\Request;&#10;use Symfony\Component\HttpFoundation\Response;&#10;use Symfony\Component\HttpFoundation\JsonResponse;&#10;use Symfony\Component\Routing\Annotation\Route;&#10;use Symfony\Component\Process\Process;&#10;&#10;#[Route('/admin')]&#10;class AdminController extends AbstractController&#10;{&#10;    public function __construct(&#10;        private EntityManagerInterface $entityManager,&#10;        private RoomRepository $roomRepository,&#10;        private GameSessionRepository $gameSessionRepository,&#10;        private WikipediaArticleRepository $wikipediaArticleRepository,&#10;        private PedantixService $pedantixService&#10;    ) {}&#10;&#10;    #[Route('/', name: 'admin_dashboard')]&#10;    public function dashboard(): Response&#10;    {&#10;        // Statistiques générales&#10;        $totalRooms = $this-&gt;roomRepository-&gt;count([]);&#10;        $activeRooms = $this-&gt;roomRepository-&gt;count(['isGameCompleted' =&gt; false]);&#10;        $completedRooms = $this-&gt;roomRepository-&gt;count(['isGameCompleted' =&gt; true]);&#10;        $totalSessions = $this-&gt;gameSessionRepository-&gt;count([]);&#10;        $activeSessions = $this-&gt;gameSessionRepository-&gt;createQueryBuilder('gs')&#10;            -&gt;where('gs.lastActivity &gt; :since')&#10;            -&gt;setParameter('since', new \DateTimeImmutable('-1 hour'))&#10;            -&gt;getQuery()&#10;            -&gt;getResult();&#10;        $totalArticles = $this-&gt;wikipediaArticleRepository-&gt;count([]);&#10;        $activeArticles = $this-&gt;wikipediaArticleRepository-&gt;count(['isActive' =&gt; true]);&#10;&#10;        // Dernières activités&#10;        $recentRooms = $this-&gt;roomRepository-&gt;findBy([], ['createdAt' =&gt; 'DESC'], 10);&#10;        $recentSessions = $this-&gt;gameSessionRepository-&gt;findBy([], ['lastActivity' =&gt; 'DESC'], 15);&#10;&#10;        // Top joueurs&#10;        $topPlayers = $this-&gt;gameSessionRepository-&gt;createQueryBuilder('gs')&#10;            -&gt;select('gs.playerName, COUNT(gs.id) as gamesPlayed, AVG(gs.score) as avgScore, MAX(gs.score) as maxScore')&#10;            -&gt;where('gs.isCompleted = true')&#10;            -&gt;groupBy('gs.playerName')&#10;            -&gt;orderBy('avgScore', 'DESC')&#10;            -&gt;setMaxResults(10)&#10;            -&gt;getQuery()&#10;            -&gt;getResult();&#10;&#10;        return $this-&gt;render('admin/dashboard.html.twig', [&#10;            'stats' =&gt; [&#10;                'totalRooms' =&gt; $totalRooms,&#10;                'activeRooms' =&gt; $activeRooms,&#10;                'completedRooms' =&gt; $completedRooms,&#10;                'totalSessions' =&gt; $totalSessions,&#10;                'activeSessions' =&gt; count($activeSessions),&#10;                'totalArticles' =&gt; $totalArticles,&#10;                'activeArticles' =&gt; $activeArticles,&#10;            ],&#10;            'recentRooms' =&gt; $recentRooms,&#10;            'recentSessions' =&gt; $recentSessions,&#10;            'topPlayers' =&gt; $topPlayers,&#10;        ]);&#10;    }&#10;&#10;    #[Route('/rooms', name: 'admin_rooms')]&#10;    public function rooms(Request $request): Response&#10;    {&#10;        $page = max(1, $request-&gt;query-&gt;getInt('page', 1));&#10;        $limit = 20;&#10;        $offset = ($page - 1) * $limit;&#10;&#10;        $queryBuilder = $this-&gt;roomRepository-&gt;createQueryBuilder('r')&#10;            -&gt;orderBy('r.createdAt', 'DESC');&#10;&#10;        $search = $request-&gt;query-&gt;get('search');&#10;        if ($search) {&#10;            $queryBuilder-&gt;where('r.title LIKE :search OR r.code LIKE :search')&#10;                -&gt;setParameter('search', '%' . $search . '%');&#10;        }&#10;&#10;        $gameMode = $request-&gt;query-&gt;get('gameMode');&#10;        if ($gameMode) {&#10;            $queryBuilder-&gt;andWhere('r.gameMode = :gameMode')&#10;                -&gt;setParameter('gameMode', $gameMode);&#10;        }&#10;&#10;        $status = $request-&gt;query-&gt;get('status');&#10;        if ($status === 'active') {&#10;            $queryBuilder-&gt;andWhere('r.isGameCompleted = false');&#10;        } elseif ($status === 'completed') {&#10;            $queryBuilder-&gt;andWhere('r.isGameCompleted = true');&#10;        }&#10;&#10;        $totalQuery = clone $queryBuilder;&#10;        $total = count($totalQuery-&gt;getQuery()-&gt;getResult());&#10;&#10;        $rooms = $queryBuilder&#10;            -&gt;setFirstResult($offset)&#10;            -&gt;setMaxResults($limit)&#10;            -&gt;getQuery()&#10;            -&gt;getResult();&#10;&#10;        $totalPages = ceil($total / $limit);&#10;&#10;        return $this-&gt;render('admin/rooms.html.twig', [&#10;            'rooms' =&gt; $rooms,&#10;            'currentPage' =&gt; $page,&#10;            'totalPages' =&gt; $totalPages,&#10;            'total' =&gt; $total,&#10;            'search' =&gt; $search,&#10;            'gameMode' =&gt; $gameMode,&#10;            'status' =&gt; $status,&#10;        ]);&#10;    }&#10;&#10;    #[Route('/sessions', name: 'admin_sessions')]&#10;    public function sessions(Request $request): Response&#10;    {&#10;        $page = max(1, $request-&gt;query-&gt;getInt('page', 1));&#10;        $limit = 25;&#10;        $offset = ($page - 1) * $limit;&#10;&#10;        $queryBuilder = $this-&gt;gameSessionRepository-&gt;createQueryBuilder('gs')&#10;            -&gt;leftJoin('gs.room', 'r')&#10;            -&gt;addSelect('r')&#10;            -&gt;orderBy('gs.lastActivity', 'DESC');&#10;&#10;        $search = $request-&gt;query-&gt;get('search');&#10;        if ($search) {&#10;            $queryBuilder-&gt;where('gs.playerName LIKE :search OR r.title LIKE :search OR r.code LIKE :search')&#10;                -&gt;setParameter('search', '%' . $search . '%');&#10;        }&#10;&#10;        $totalQuery = clone $queryBuilder;&#10;        $total = count($totalQuery-&gt;getQuery()-&gt;getResult());&#10;&#10;        $sessions = $queryBuilder&#10;            -&gt;setFirstResult($offset)&#10;            -&gt;setMaxResults($limit)&#10;            -&gt;getQuery()&#10;            -&gt;getResult();&#10;&#10;        $totalPages = ceil($total / $limit);&#10;&#10;        return $this-&gt;render('admin/sessions.html.twig', [&#10;            'sessions' =&gt; $sessions,&#10;            'currentPage' =&gt; $page,&#10;            'totalPages' =&gt; $totalPages,&#10;            'total' =&gt; $total,&#10;            'search' =&gt; $search,&#10;        ]);&#10;    }&#10;&#10;    #[Route('/articles', name: 'admin_articles')]&#10;    public function articles(Request $request): Response&#10;    {&#10;        $page = max(1, $request-&gt;query-&gt;getInt('page', 1));&#10;        $limit = 20;&#10;        $offset = ($page - 1) * $limit;&#10;&#10;        $queryBuilder = $this-&gt;wikipediaArticleRepository-&gt;createQueryBuilder('wa')&#10;            -&gt;orderBy('wa.createdAt', 'DESC');&#10;&#10;        $search = $request-&gt;query-&gt;get('search');&#10;        if ($search) {&#10;            $queryBuilder-&gt;where('wa.title LIKE :search OR wa.category LIKE :search')&#10;                -&gt;setParameter('search', '%' . $search . '%');&#10;        }&#10;&#10;        $category = $request-&gt;query-&gt;get('category');&#10;        if ($category) {&#10;            $queryBuilder-&gt;andWhere('wa.category = :category')&#10;                -&gt;setParameter('category', $category);&#10;        }&#10;&#10;        $difficulty = $request-&gt;query-&gt;get('difficulty');&#10;        if ($difficulty) {&#10;            $queryBuilder-&gt;andWhere('wa.difficulty = :difficulty')&#10;                -&gt;setParameter('difficulty', $difficulty);&#10;        }&#10;&#10;        $totalQuery = clone $queryBuilder;&#10;        $total = count($totalQuery-&gt;getQuery()-&gt;getResult());&#10;&#10;        $articles = $queryBuilder&#10;            -&gt;setFirstResult($offset)&#10;            -&gt;setMaxResults($limit)&#10;            -&gt;getQuery()&#10;            -&gt;getResult();&#10;&#10;        $totalPages = ceil($total / $limit);&#10;&#10;        // Récupérer les catégories et difficultés disponibles&#10;        $categories = $this-&gt;wikipediaArticleRepository-&gt;createQueryBuilder('wa')&#10;            -&gt;select('DISTINCT wa.category')&#10;            -&gt;where('wa.category IS NOT NULL')&#10;            -&gt;orderBy('wa.category')&#10;            -&gt;getQuery()&#10;            -&gt;getScalarResult();&#10;&#10;        $difficulties = $this-&gt;wikipediaArticleRepository-&gt;createQueryBuilder('wa')&#10;            -&gt;select('DISTINCT wa.difficulty')&#10;            -&gt;where('wa.difficulty IS NOT NULL')&#10;            -&gt;orderBy('wa.difficulty')&#10;            -&gt;getQuery()&#10;            -&gt;getScalarResult();&#10;&#10;        return $this-&gt;render('admin/articles.html.twig', [&#10;            'articles' =&gt; $articles,&#10;            'currentPage' =&gt; $page,&#10;            'totalPages' =&gt; $totalPages,&#10;            'total' =&gt; $total,&#10;            'search' =&gt; $search,&#10;            'category' =&gt; $category,&#10;            'difficulty' =&gt; $difficulty,&#10;            'categories' =&gt; array_column($categories, 'category'),&#10;            'difficulties' =&gt; array_column($difficulties, 'difficulty'),&#10;        ]);&#10;    }&#10;&#10;    #[Route('/actions', name: 'admin_actions')]&#10;    public function actions(): Response&#10;    {&#10;        return $this-&gt;render('admin/actions.html.twig');&#10;    }&#10;&#10;    #[Route('/api/action/clear-rooms', name: 'admin_clear_rooms', methods: ['POST'])]&#10;    public function clearRooms(): JsonResponse&#10;    {&#10;        try {&#10;            // Supprimer d'abord toutes les sessions de jeu&#10;            $this-&gt;entityManager-&gt;createQuery('DELETE FROM App\Entity\GameSession')-&gt;execute();&#10;            &#10;            // Puis supprimer toutes les salles&#10;            $roomsDeleted = $this-&gt;entityManager-&gt;createQuery('DELETE FROM App\Entity\Room')-&gt;execute();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; true,&#10;                'message' =&gt; &quot;Toutes les salles ont été supprimées ({$roomsDeleted} salles)&quot;,&#10;                'roomsDeleted' =&gt; $roomsDeleted&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur lors de la suppression : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/api/action/clear-inactive-sessions', name: 'admin_clear_inactive_sessions', methods: ['POST'])]&#10;    public function clearInactiveSessions(): JsonResponse&#10;    {&#10;        try {&#10;            // Supprimer les sessions inactives depuis plus de 24h&#10;            $cutoff = new \DateTimeImmutable('-24 hours');&#10;            $sessionsDeleted = $this-&gt;entityManager-&gt;createQuery(&#10;                'DELETE FROM App\Entity\GameSession gs WHERE gs.lastActivity &lt; :cutoff'&#10;            )&#10;            -&gt;setParameter('cutoff', $cutoff)&#10;            -&gt;execute();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; true,&#10;                'message' =&gt; &quot;Sessions inactives supprimées ({$sessionsDeleted} sessions)&quot;,&#10;                'sessionsDeleted' =&gt; $sessionsDeleted&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur lors de la suppression : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/api/action/seed-articles', name: 'admin_seed_articles', methods: ['POST'])]&#10;    public function seedArticles(): JsonResponse&#10;    {&#10;        try {&#10;            $process = new Process(['php', 'bin/console', 'app:seed-wikipedia-articles']);&#10;            $process-&gt;setWorkingDirectory($this-&gt;getParameter('kernel.project_dir'));&#10;            $process-&gt;setTimeout(300); // 5 minutes&#10;            $process-&gt;run();&#10;&#10;            if ($process-&gt;isSuccessful()) {&#10;                return $this-&gt;json([&#10;                    'success' =&gt; true,&#10;                    'message' =&gt; 'Articles Wikipedia ajoutés avec succès',&#10;                    'output' =&gt; $process-&gt;getOutput()&#10;                ]);&#10;            } else {&#10;                return $this-&gt;json([&#10;                    'success' =&gt; false,&#10;                    'message' =&gt; 'Erreur lors de l\'ajout des articles',&#10;                    'error' =&gt; $process-&gt;getErrorOutput()&#10;                ], 500);&#10;            }&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/api/action/deploy', name: 'admin_deploy', methods: ['POST'])]&#10;    public function deploy(): JsonResponse&#10;    {&#10;        try {&#10;            // Exécuter le script de déploiement&#10;            $deployScript = $this-&gt;getParameter('kernel.project_dir') . '/deploy.php';&#10;            &#10;            if (!file_exists($deployScript)) {&#10;                return $this-&gt;json([&#10;                    'success' =&gt; false,&#10;                    'message' =&gt; 'Script de déploiement introuvable'&#10;                ], 404);&#10;            }&#10;&#10;            $process = new Process(['php', $deployScript, 'auto=1']);&#10;            $process-&gt;setWorkingDirectory($this-&gt;getParameter('kernel.project_dir'));&#10;            $process-&gt;setTimeout(600); // 10 minutes&#10;            $process-&gt;run();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; $process-&gt;isSuccessful(),&#10;                'message' =&gt; $process-&gt;isSuccessful() ? 'Déploiement réussi' : 'Erreur de déploiement',&#10;                'output' =&gt; $process-&gt;getOutput(),&#10;                'error' =&gt; $process-&gt;getErrorOutput()&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/api/action/cache-clear', name: 'admin_cache_clear', methods: ['POST'])]&#10;    public function cacheClear(): JsonResponse&#10;    {&#10;        try {&#10;            $process = new Process(['php', 'bin/console', 'cache:clear']);&#10;            $process-&gt;setWorkingDirectory($this-&gt;getParameter('kernel.project_dir'));&#10;            $process-&gt;setTimeout(120);&#10;            $process-&gt;run();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; $process-&gt;isSuccessful(),&#10;                'message' =&gt; $process-&gt;isSuccessful() ? 'Cache vidé avec succès' : 'Erreur lors du vidage du cache',&#10;                'output' =&gt; $process-&gt;getOutput()&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/api/action/database-update', name: 'admin_database_update', methods: ['POST'])]&#10;    public function databaseUpdate(): JsonResponse&#10;    {&#10;        try {&#10;            $process = new Process(['php', 'bin/console', 'doctrine:schema:update', '--force']);&#10;            $process-&gt;setWorkingDirectory($this-&gt;getParameter('kernel.project_dir'));&#10;            $process-&gt;setTimeout(120);&#10;            $process-&gt;run();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; $process-&gt;isSuccessful(),&#10;                'message' =&gt; $process-&gt;isSuccessful() ? 'Base de données mise à jour' : 'Erreur lors de la mise à jour',&#10;                'output' =&gt; $process-&gt;getOutput()&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/room/{id}/delete', name: 'admin_room_delete', methods: ['POST'])]&#10;    public function deleteRoom(Room $room): JsonResponse&#10;    {&#10;        try {&#10;            // Supprimer d'abord toutes les sessions liées&#10;            $this-&gt;entityManager-&gt;createQuery(&#10;                'DELETE FROM App\Entity\GameSession gs WHERE gs.room = :room'&#10;            )-&gt;setParameter('room', $room)-&gt;execute();&#10;&#10;            // Puis supprimer la salle&#10;            $this-&gt;entityManager-&gt;remove($room);&#10;            $this-&gt;entityManager-&gt;flush();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; true,&#10;                'message' =&gt; &quot;Salle '{$room-&gt;getCode()}' supprimée avec succès&quot;&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur lors de la suppression : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/article/{id}/toggle', name: 'admin_article_toggle', methods: ['POST'])]&#10;    public function toggleArticle(WikipediaArticle $article): JsonResponse&#10;    {&#10;        try {&#10;            $article-&gt;setIsActive(!$article-&gt;isActive());&#10;            $this-&gt;entityManager-&gt;flush();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; true,&#10;                'message' =&gt; 'Article ' . ($article-&gt;isActive() ? 'activé' : 'désactivé'),&#10;                'isActive' =&gt; $article-&gt;isActive()&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/article/{id}/delete', name: 'admin_article_delete', methods: ['POST'])]&#10;    public function deleteArticle(WikipediaArticle $article): JsonResponse&#10;    {&#10;        try {&#10;            $this-&gt;entityManager-&gt;remove($article);&#10;            $this-&gt;entityManager-&gt;flush();&#10;&#10;            return $this-&gt;json([&#10;                'success' =&gt; true,&#10;                'message' =&gt; &quot;Article '{$article-&gt;getTitle()}' supprimé avec succès&quot;&#10;            ]);&#10;        } catch (\Exception $e) {&#10;            return $this-&gt;json([&#10;                'success' =&gt; false,&#10;                'message' =&gt; 'Erreur lors de la suppression : ' . $e-&gt;getMessage()&#10;            ], 500);&#10;        }&#10;    }&#10;&#10;    #[Route('/system-info', name: 'admin_system_info')]&#10;    public function systemInfo(): Response&#10;    {&#10;        $projectDir = $this-&gt;getParameter('kernel.project_dir');&#10;        &#10;        // Informations système&#10;        $systemInfo = [&#10;            'php_version' =&gt; PHP_VERSION,&#10;            'symfony_version' =&gt; \Symfony\Component\HttpKernel\Kernel::VERSION,&#10;            'server_software' =&gt; $_SERVER['SERVER_SOFTWARE'] ?? 'N/A',&#10;            'document_root' =&gt; $_SERVER['DOCUMENT_ROOT'] ?? 'N/A',&#10;            'memory_limit' =&gt; ini_get('memory_limit'),&#10;            'max_execution_time' =&gt; ini_get('max_execution_time'),&#10;            'upload_max_filesize' =&gt; ini_get('upload_max_filesize'),&#10;            'post_max_size' =&gt; ini_get('post_max_size'),&#10;        ];&#10;&#10;        // Taille des dossiers&#10;        $folderSizes = [&#10;            'var/cache' =&gt; $this-&gt;getFolderSize($projectDir . '/var/cache'),&#10;            'var/log' =&gt; $this-&gt;getFolderSize($projectDir . '/var/log'),&#10;            'vendor' =&gt; $this-&gt;getFolderSize($projectDir . '/vendor'),&#10;        ];&#10;&#10;        return $this-&gt;render('admin/system_info.html.twig', [&#10;            'systemInfo' =&gt; $systemInfo,&#10;            'folderSizes' =&gt; $folderSizes,&#10;        ]);&#10;    }&#10;&#10;    private function getFolderSize(string $path): string&#10;    {&#10;        if (!is_dir($path)) {&#10;            return 'N/A';&#10;        }&#10;&#10;        $size = 0;&#10;        $iterator = new \RecursiveIteratorIterator(&#10;            new \RecursiveDirectoryIterator($path, \RecursiveDirectoryIterator::SKIP_DOTS)&#10;        );&#10;&#10;        foreach ($iterator as $file) {&#10;            if ($file-&gt;isFile()) {&#10;                $size += $file-&gt;getSize();&#10;            }&#10;        }&#10;&#10;        return $this-&gt;formatBytes($size);&#10;    }&#10;&#10;    private function formatBytes(int $bytes): string&#10;    {&#10;        $units = ['B', 'KB', 'MB', 'GB'];&#10;        $factor = floor((strlen($bytes) - 1) / 3);&#10;        return sprintf(&quot;%.2f %s&quot;, $bytes / pow(1024, $factor), $units[$factor]);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/admin/articles.html.twig">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/admin/articles.html.twig" />
              <option name="updatedContent" value="{% extends 'admin/base.html.twig' %}&#10;&#10;{% block page_title %}Articles Wikipedia{% endblock %}&#10;&#10;{% block content %}&#10;&lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;    &lt;div&gt;&#10;        &lt;h5 class=&quot;mb-0&quot;&gt;Total: {{ total }} articles ({{ articles|filter(a =&gt; a.isActive)|length }} actifs)&lt;/h5&gt;&#10;    &lt;/div&gt;&#10;    &lt;div&gt;&#10;        &lt;button class=&quot;btn btn-success-admin&quot; onclick=&quot;executeAction('{{ path('admin_seed_articles') }}', 'Ajouter de nouveaux articles Wikipedia ?')&quot;&gt;&#10;            &lt;i class=&quot;fas fa-plus me-2&quot;&gt;&lt;/i&gt;Ajouter articles&#10;        &lt;/button&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Filtres de recherche --&gt;&#10;&lt;div class=&quot;card mb-4&quot;&gt;&#10;    &lt;div class=&quot;card-body&quot;&gt;&#10;        &lt;form method=&quot;GET&quot; class=&quot;row g-3&quot;&gt;&#10;            &lt;div class=&quot;col-md-3&quot;&gt;&#10;                &lt;label for=&quot;search&quot; class=&quot;form-label&quot;&gt;Recherche&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;search&quot; name=&quot;search&quot; &#10;                       value=&quot;{{ search }}&quot; placeholder=&quot;Titre ou catégorie...&quot;&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2&quot;&gt;&#10;                &lt;label for=&quot;category&quot; class=&quot;form-label&quot;&gt;Catégorie&lt;/label&gt;&#10;                &lt;select class=&quot;form-select&quot; id=&quot;category&quot; name=&quot;category&quot;&gt;&#10;                    &lt;option value=&quot;&quot;&gt;Toutes&lt;/option&gt;&#10;                    {% for cat in categories %}&#10;                        &lt;option value=&quot;{{ cat }}&quot; {{ category == cat ? 'selected' : '' }}&gt;{{ cat }}&lt;/option&gt;&#10;                    {% endfor %}&#10;                &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2&quot;&gt;&#10;                &lt;label for=&quot;difficulty&quot; class=&quot;form-label&quot;&gt;Difficulté&lt;/label&gt;&#10;                &lt;select class=&quot;form-select&quot; id=&quot;difficulty&quot; name=&quot;difficulty&quot;&gt;&#10;                    &lt;option value=&quot;&quot;&gt;Toutes&lt;/option&gt;&#10;                    {% for diff in difficulties %}&#10;                        &lt;option value=&quot;{{ diff }}&quot; {{ difficulty == diff ? 'selected' : '' }}&gt;{{ diff }}&lt;/option&gt;&#10;                    {% endfor %}&#10;                &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2 d-flex align-items-end&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary me-2&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;                &lt;a href=&quot;{{ path('admin_articles') }}&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-times&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Tableau des articles --&gt;&#10;&lt;div class=&quot;card&quot;&gt;&#10;    &lt;div class=&quot;card-body p-0&quot;&gt;&#10;        &lt;div class=&quot;table-responsive&quot;&gt;&#10;            &lt;table class=&quot;table table-admin mb-0&quot;&gt;&#10;                &lt;thead&gt;&#10;                    &lt;tr&gt;&#10;                        &lt;th&gt;Titre&lt;/th&gt;&#10;                        &lt;th&gt;Catégorie&lt;/th&gt;&#10;                        &lt;th&gt;Difficulté&lt;/th&gt;&#10;                        &lt;th&gt;Statut&lt;/th&gt;&#10;                        &lt;th&gt;Ajouté le&lt;/th&gt;&#10;                        &lt;th class=&quot;text-center&quot;&gt;Actions&lt;/th&gt;&#10;                    &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody&gt;&#10;                    {% for article in articles %}&#10;                    &lt;tr class=&quot;{{ not article.isActive ? 'table-secondary' : '' }}&quot;&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div class=&quot;fw-bold text-truncate&quot; style=&quot;max-width: 250px;&quot; title=&quot;{{ article.title }}&quot;&gt;&#10;                                {{ article.title }}&#10;                            &lt;/div&gt;&#10;                            &lt;small class=&quot;text-muted&quot;&gt;&#10;                                &lt;i class=&quot;fas fa-link me-1&quot;&gt;&lt;/i&gt;&#10;                                &lt;a href=&quot;{{ article.url }}&quot; target=&quot;_blank&quot; class=&quot;text-decoration-none&quot;&gt;&#10;                                    Wikipedia&#10;                                &lt;/a&gt;&#10;                            &lt;/small&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            {% if article.category %}&#10;                                &lt;span class=&quot;badge bg-info&quot;&gt;{{ article.category }}&lt;/span&gt;&#10;                            {% else %}&#10;                                &lt;span class=&quot;text-muted&quot;&gt;-&lt;/span&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            {% if article.difficulty %}&#10;                                {% set difficultyClass = article.difficulty == 'Facile' ? 'success' : (article.difficulty == 'Difficile' ? 'danger' : 'warning') %}&#10;                                &lt;span class=&quot;badge bg-{{ difficultyClass }}&quot;&gt;{{ article.difficulty }}&lt;/span&gt;&#10;                            {% else %}&#10;                                &lt;span class=&quot;text-muted&quot;&gt;-&lt;/span&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            {% if article.isActive %}&#10;                                &lt;span class=&quot;badge bg-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-check me-1&quot;&gt;&lt;/i&gt;Actif&#10;                                &lt;/span&gt;&#10;                            {% else %}&#10;                                &lt;span class=&quot;badge bg-secondary&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-pause me-1&quot;&gt;&lt;/i&gt;Inactif&#10;                                &lt;/span&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div&gt;{{ article.createdAt|date('d/m/Y') }}&lt;/div&gt;&#10;                            &lt;small class=&quot;text-muted&quot;&gt;{{ article.createdAt|date('H:i') }}&lt;/small&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td class=&quot;text-center&quot;&gt;&#10;                            &lt;div class=&quot;btn-group&quot; role=&quot;group&quot;&gt;&#10;                                &lt;button class=&quot;btn btn-sm btn-outline-{{ article.isActive ? 'warning' : 'success' }}&quot; &#10;                                        onclick=&quot;toggleArticle('{{ article.id }}', '{{ article.isActive }}')&quot; &#10;                                        title=&quot;{{ article.isActive ? 'Désactiver' : 'Activer' }}&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-{{ article.isActive ? 'pause' : 'play' }}&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                                &lt;button class=&quot;btn btn-sm btn-outline-primary&quot; &#10;                                        onclick=&quot;createRoomFromArticle('{{ article.url|e('js') }}', '{{ article.title|e('js') }}')&quot; &#10;                                        title=&quot;Créer une salle&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-plus&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                                &lt;a href=&quot;{{ article.url }}&quot; class=&quot;btn btn-sm btn-outline-info&quot; target=&quot;_blank&quot; title=&quot;Voir sur Wikipedia&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&#10;                                &lt;/a&gt;&#10;                                &lt;button class=&quot;btn btn-sm btn-outline-danger&quot; &#10;                                        onclick=&quot;deleteArticle('{{ article.id }}', '{{ article.title|e('js') }}')&quot; &#10;                                        title=&quot;Supprimer&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                    &lt;/tr&gt;&#10;                    {% else %}&#10;                    &lt;tr&gt;&#10;                        &lt;td colspan=&quot;6&quot; class=&quot;text-center text-muted py-5&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-newspaper fa-3x mb-3&quot;&gt;&lt;/i&gt;&#10;                            &lt;div&gt;Aucun article trouvé&lt;/div&gt;&#10;                            &lt;button class=&quot;btn btn-primary mt-3&quot; onclick=&quot;executeAction('{{ path('admin_seed_articles') }}', 'Ajouter des articles Wikipedia ?')&quot;&gt;&#10;                                &lt;i class=&quot;fas fa-plus me-2&quot;&gt;&lt;/i&gt;Ajouter des articles&#10;                            &lt;/button&gt;&#10;                        &lt;/td&gt;&#10;                    &lt;/tr&gt;&#10;                    {% endfor %}&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Pagination --&gt;&#10;{% if totalPages &gt; 1 %}&#10;&lt;nav aria-label=&quot;Pagination&quot; class=&quot;mt-4&quot;&gt;&#10;    &lt;ul class=&quot;pagination justify-content-center&quot;&gt;&#10;        {% if currentPage &gt; 1 %}&#10;            &lt;li class=&quot;page-item&quot;&gt;&#10;                &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_articles', {page: currentPage - 1, search: search, category: category, difficulty: difficulty}) }}&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/li&gt;&#10;        {% endif %}&#10;        &#10;        {% for page in 1..totalPages %}&#10;            {% if page == currentPage %}&#10;                &lt;li class=&quot;page-item active&quot;&gt;&#10;                    &lt;span class=&quot;page-link&quot;&gt;{{ page }}&lt;/span&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page &lt;= currentPage + 2 and page &gt;= currentPage - 2 %}&#10;                &lt;li class=&quot;page-item&quot;&gt;&#10;                    &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_articles', {page: page, search: search, category: category, difficulty: difficulty}) }}&quot;&gt;{{ page }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page == 1 or page == totalPages %}&#10;                &lt;li class=&quot;page-item&quot;&gt;&#10;                    &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_articles', {page: page, search: search, category: category, difficulty: difficulty}) }}&quot;&gt;{{ page }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page == currentPage + 3 or page == currentPage - 3 %}&#10;                &lt;li class=&quot;page-item disabled&quot;&gt;&#10;                    &lt;span class=&quot;page-link&quot;&gt;...&lt;/span&gt;&#10;                &lt;/li&gt;&#10;            {% endif %}&#10;        {% endfor %}&#10;        &#10;        {% if currentPage &lt; totalPages %}&#10;            &lt;li class=&quot;page-item&quot;&gt;&#10;                &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_articles', {page: currentPage + 1, search: search, category: category, difficulty: difficulty}) }}&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/li&gt;&#10;        {% endif %}&#10;    &lt;/ul&gt;&#10;&lt;/nav&gt;&#10;{% endif %}&#10;&#10;&lt;!-- Statistiques des articles --&gt;&#10;&lt;div class=&quot;row mt-4&quot;&gt;&#10;    &lt;div class=&quot;col-md-6&quot;&gt;&#10;        &lt;div class=&quot;card&quot;&gt;&#10;            &lt;div class=&quot;card-header&quot;&gt;&#10;                &lt;h6 class=&quot;mb-0&quot;&gt;&lt;i class=&quot;fas fa-chart-pie me-2&quot;&gt;&lt;/i&gt;Répartition par catégorie&lt;/h6&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;card-body&quot;&gt;&#10;                &lt;canvas id=&quot;categoryChart&quot; width=&quot;400&quot; height=&quot;200&quot;&gt;&lt;/canvas&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;col-md-6&quot;&gt;&#10;        &lt;div class=&quot;card&quot;&gt;&#10;            &lt;div class=&quot;card-header&quot;&gt;&#10;                &lt;h6 class=&quot;mb-0&quot;&gt;&lt;i class=&quot;fas fa-chart-bar me-2&quot;&gt;&lt;/i&gt;Répartition par difficulté&lt;/h6&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;card-body&quot;&gt;&#10;                &lt;canvas id=&quot;difficultyChart&quot; width=&quot;400&quot; height=&quot;200&quot;&gt;&lt;/canvas&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;{% endblock %}&#10;&#10;{% block javascripts %}&#10;&lt;script&gt;&#10;async function toggleArticle(articleId, currentStatus) {&#10;    const action = currentStatus === '1' ? 'désactiver' : 'activer';&#10;    if (!confirm(`Voulez-vous ${action} cet article ?`)) {&#10;        return;&#10;    }&#10;    &#10;    await executeAction(`{{ path('admin_article_toggle', {id: '__ID__'})|replace({'__ID__': ''}) }}${articleId}`, null);&#10;}&#10;&#10;async function deleteArticle(articleId, title) {&#10;    if (!confirm(`Êtes-vous sûr de vouloir supprimer l'article &quot;${title}&quot; ?\n\nCette action est irréversible.`)) {&#10;        return;&#10;    }&#10;    &#10;    await executeAction(`{{ path('admin_article_delete', {id: '__ID__'})|replace({'__ID__': ''}) }}${articleId}`, null);&#10;}&#10;&#10;function createRoomFromArticle(url, title) {&#10;    if (confirm(`Créer une nouvelle salle de jeu avec l'article &quot;${title}&quot; ?`)) {&#10;        // Ouvrir la page d'accueil avec l'URL pré-remplie&#10;        const homeUrl = `{{ path('app_home') }}?url=${encodeURIComponent(url)}`;&#10;        window.open(homeUrl, '_blank');&#10;    }&#10;}&#10;&#10;// Graphiques&#10;{% if articles|length &gt; 0 %}&#10;// Graphique des catégories&#10;const categoryData = {};&#10;{% for article in articles %}&#10;    {% set cat = article.category ?: 'Non classé' %}&#10;    {% if categoryData[cat] is not defined %}&#10;        categoryData['{{ cat|e('js') }}'] = 0;&#10;    {% endif %}&#10;    categoryData['{{ cat|e('js') }}']++;&#10;{% endfor %}&#10;&#10;const categoryCtx = document.getElementById('categoryChart').getContext('2d');&#10;new Chart(categoryCtx, {&#10;    type: 'doughnut',&#10;    data: {&#10;        labels: Object.keys(categoryData),&#10;        datasets: [{&#10;            data: Object.values(categoryData),&#10;            backgroundColor: [&#10;                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'&#10;            ]&#10;        }]&#10;    },&#10;    options: {&#10;        responsive: true,&#10;        plugins: {&#10;            legend: {&#10;                position: 'bottom'&#10;            }&#10;        }&#10;    }&#10;});&#10;&#10;// Graphique des difficultés&#10;const difficultyData = {};&#10;{% for article in articles %}&#10;    {% set diff = article.difficulty ?: 'Non définie' %}&#10;    {% if difficultyData[diff] is not defined %}&#10;        difficultyData['{{ diff|e('js') }}'] = 0;&#10;    {% endif %}&#10;    difficultyData['{{ diff|e('js') }}']++;&#10;{% endfor %}&#10;&#10;const difficultyCtx = document.getElementById('difficultyChart').getContext('2d');&#10;new Chart(difficultyCtx, {&#10;    type: 'bar',&#10;    data: {&#10;        labels: Object.keys(difficultyData),&#10;        datasets: [{&#10;            label: 'Nombre d\'articles',&#10;            data: Object.values(difficultyData),&#10;            backgroundColor: ['#28a745', '#ffc107', '#dc3545', '#6c757d']&#10;        }]&#10;    },&#10;    options: {&#10;        responsive: true,&#10;        plugins: {&#10;            legend: {&#10;                display: false&#10;            }&#10;        },&#10;        scales: {&#10;            y: {&#10;                beginAtZero: true,&#10;                ticks: {&#10;                    stepSize: 1&#10;                }&#10;            }&#10;        }&#10;    }&#10;});&#10;{% endif %}&#10;&lt;/script&gt;&#10;{% endblock %}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/admin/rooms.html.twig">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/admin/rooms.html.twig" />
              <option name="updatedContent" value="{% extends 'admin/base.html.twig' %}&#10;&#10;{% block page_title %}Gestion des salles{% endblock %}&#10;&#10;{% block content %}&#10;&lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;    &lt;div&gt;&#10;        &lt;h5 class=&quot;mb-0&quot;&gt;Total: {{ total }} salles&lt;/h5&gt;&#10;    &lt;/div&gt;&#10;    &lt;div&gt;&#10;        &lt;a href=&quot;{{ path('app_home') }}&quot; class=&quot;btn btn-admin&quot; target=&quot;_blank&quot;&gt;&#10;            &lt;i class=&quot;fas fa-plus me-2&quot;&gt;&lt;/i&gt;Créer une nouvelle salle&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Filtres de recherche --&gt;&#10;&lt;div class=&quot;card mb-4&quot;&gt;&#10;    &lt;div class=&quot;card-body&quot;&gt;&#10;        &lt;form method=&quot;GET&quot; class=&quot;row g-3&quot;&gt;&#10;            &lt;div class=&quot;col-md-3&quot;&gt;&#10;                &lt;label for=&quot;search&quot; class=&quot;form-label&quot;&gt;Recherche&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;search&quot; name=&quot;search&quot; &#10;                       value=&quot;{{ search }}&quot; placeholder=&quot;Code ou titre...&quot;&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2&quot;&gt;&#10;                &lt;label for=&quot;gameMode&quot; class=&quot;form-label&quot;&gt;Mode de jeu&lt;/label&gt;&#10;                &lt;select class=&quot;form-select&quot; id=&quot;gameMode&quot; name=&quot;gameMode&quot;&gt;&#10;                    &lt;option value=&quot;&quot;&gt;Tous&lt;/option&gt;&#10;                    &lt;option value=&quot;competition&quot; {{ gameMode == 'competition' ? 'selected' : '' }}&gt;Compétition&lt;/option&gt;&#10;                    &lt;option value=&quot;cooperation&quot; {{ gameMode == 'cooperation' ? 'selected' : '' }}&gt;Coopération&lt;/option&gt;&#10;                &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2&quot;&gt;&#10;                &lt;label for=&quot;status&quot; class=&quot;form-label&quot;&gt;Statut&lt;/label&gt;&#10;                &lt;select class=&quot;form-select&quot; id=&quot;status&quot; name=&quot;status&quot;&gt;&#10;                    &lt;option value=&quot;&quot;&gt;Tous&lt;/option&gt;&#10;                    &lt;option value=&quot;active&quot; {{ status == 'active' ? 'selected' : '' }}&gt;Actives&lt;/option&gt;&#10;                    &lt;option value=&quot;completed&quot; {{ status == 'completed' ? 'selected' : '' }}&gt;Terminées&lt;/option&gt;&#10;                &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2 d-flex align-items-end&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary me-2&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;                &lt;a href=&quot;{{ path('admin_rooms') }}&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-times&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Tableau des salles --&gt;&#10;&lt;div class=&quot;card&quot;&gt;&#10;    &lt;div class=&quot;card-body p-0&quot;&gt;&#10;        &lt;div class=&quot;table-responsive&quot;&gt;&#10;            &lt;table class=&quot;table table-admin mb-0&quot;&gt;&#10;                &lt;thead&gt;&#10;                    &lt;tr&gt;&#10;                        &lt;th&gt;Code&lt;/th&gt;&#10;                        &lt;th&gt;Titre&lt;/th&gt;&#10;                        &lt;th&gt;Mode&lt;/th&gt;&#10;                        &lt;th&gt;Statut&lt;/th&gt;&#10;                        &lt;th&gt;Joueurs&lt;/th&gt;&#10;                        &lt;th&gt;Créée le&lt;/th&gt;&#10;                        &lt;th class=&quot;text-center&quot;&gt;Actions&lt;/th&gt;&#10;                    &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody&gt;&#10;                    {% for room in rooms %}&#10;                    &lt;tr&gt;&#10;                        &lt;td&gt;&#10;                            &lt;code class=&quot;bg-primary text-white px-2 py-1 rounded&quot;&gt;{{ room.code }}&lt;/code&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div class=&quot;fw-bold text-truncate&quot; style=&quot;max-width: 200px;&quot; title=&quot;{{ room.title }}&quot;&gt;&#10;                                {{ room.title }}&#10;                            &lt;/div&gt;&#10;                            &lt;small class=&quot;text-muted&quot;&gt;&#10;                                &lt;i class=&quot;fas fa-link me-1&quot;&gt;&lt;/i&gt;&#10;                                &lt;a href=&quot;{{ room.url }}&quot; target=&quot;_blank&quot; class=&quot;text-decoration-none&quot;&gt;&#10;                                    {{ room.url|length &gt; 50 ? room.url|slice(0, 50) ~ '...' : room.url }}&#10;                                &lt;/a&gt;&#10;                            &lt;/small&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;span class=&quot;badge bg-{{ room.gameMode == 'cooperation' ? 'info' : 'primary' }}&quot;&gt;&#10;                                &lt;i class=&quot;fas fa-{{ room.gameMode == 'cooperation' ? 'users' : 'trophy' }} me-1&quot;&gt;&lt;/i&gt;&#10;                                {{ room.gameMode == 'cooperation' ? 'Coopération' : 'Compétition' }}&#10;                            &lt;/span&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            {% if room.isGameCompleted %}&#10;                                &lt;span class=&quot;badge bg-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-check me-1&quot;&gt;&lt;/i&gt;Terminée&#10;                                &lt;/span&gt;&#10;                                {% if room.completedAt %}&#10;                                    &lt;br&gt;&lt;small class=&quot;text-muted&quot;&gt;{{ room.completedAt|date('d/m H:i') }}&lt;/small&gt;&#10;                                {% endif %}&#10;                            {% else %}&#10;                                &lt;span class=&quot;badge bg-warning&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-play me-1&quot;&gt;&lt;/i&gt;Active&#10;                                &lt;/span&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            {% set activeCount = 0 %}&#10;                            {% set completedCount = 0 %}&#10;                            {% for session in room.gameSessions %}&#10;                                {% if session.lastActivity &gt; date('-1 hour') %}&#10;                                    {% set activeCount = activeCount + 1 %}&#10;                                {% endif %}&#10;                                {% if session.isCompleted %}&#10;                                    {% set completedCount = completedCount + 1 %}&#10;                                {% endif %}&#10;                            {% endfor %}&#10;                            &#10;                            &lt;div&gt;&#10;                                &lt;span class=&quot;badge bg-success&quot;&gt;{{ completedCount }} terminés&lt;/span&gt;&#10;                                &lt;span class=&quot;badge bg-info&quot;&gt;{{ activeCount }} actifs&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;small class=&quot;text-muted&quot;&gt;{{ room.gameSessions|length }} total&lt;/small&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div&gt;{{ room.createdAt|date('d/m/Y') }}&lt;/div&gt;&#10;                            &lt;small class=&quot;text-muted&quot;&gt;{{ room.createdAt|date('H:i') }}&lt;/small&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td class=&quot;text-center&quot;&gt;&#10;                            &lt;div class=&quot;btn-group&quot; role=&quot;group&quot;&gt;&#10;                                &lt;a href=&quot;{{ path('app_game_room', {roomCode: room.code}) }}&quot; &#10;                                   class=&quot;btn btn-sm btn-outline-primary&quot; target=&quot;_blank&quot; title=&quot;Voir la salle&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-eye&quot;&gt;&lt;/i&gt;&#10;                                &lt;/a&gt;&#10;                                &lt;button class=&quot;btn btn-sm btn-outline-danger&quot; &#10;                                        onclick=&quot;deleteRoom('{{ room.id }}', '{{ room.code }}')&quot; &#10;                                        title=&quot;Supprimer&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-trash&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                    &lt;/tr&gt;&#10;                    {% else %}&#10;                    &lt;tr&gt;&#10;                        &lt;td colspan=&quot;7&quot; class=&quot;text-center text-muted py-5&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-door-open fa-3x mb-3&quot;&gt;&lt;/i&gt;&#10;                            &lt;div&gt;Aucune salle trouvée&lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                    &lt;/tr&gt;&#10;                    {% endfor %}&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Pagination --&gt;&#10;{% if totalPages &gt; 1 %}&#10;&lt;nav aria-label=&quot;Pagination&quot; class=&quot;mt-4&quot;&gt;&#10;    &lt;ul class=&quot;pagination justify-content-center&quot;&gt;&#10;        {% if currentPage &gt; 1 %}&#10;            &lt;li class=&quot;page-item&quot;&gt;&#10;                &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_rooms', {page: currentPage - 1, search: search, gameMode: gameMode, status: status}) }}&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/li&gt;&#10;        {% endif %}&#10;        &#10;        {% for page in 1..totalPages %}&#10;            {% if page == currentPage %}&#10;                &lt;li class=&quot;page-item active&quot;&gt;&#10;                    &lt;span class=&quot;page-link&quot;&gt;{{ page }}&lt;/span&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page &lt;= currentPage + 2 and page &gt;= currentPage - 2 %}&#10;                &lt;li class=&quot;page-item&quot;&gt;&#10;                    &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_rooms', {page: page, search: search, gameMode: gameMode, status: status}) }}&quot;&gt;{{ page }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page == 1 or page == totalPages %}&#10;                &lt;li class=&quot;page-item&quot;&gt;&#10;                    &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_rooms', {page: page, search: search, gameMode: gameMode, status: status}) }}&quot;&gt;{{ page }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page == currentPage + 3 or page == currentPage - 3 %}&#10;                &lt;li class=&quot;page-item disabled&quot;&gt;&#10;                    &lt;span class=&quot;page-link&quot;&gt;...&lt;/span&gt;&#10;                &lt;/li&gt;&#10;            {% endif %}&#10;        {% endfor %}&#10;        &#10;        {% if currentPage &lt; totalPages %}&#10;            &lt;li class=&quot;page-item&quot;&gt;&#10;                &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_rooms', {page: currentPage + 1, search: search, gameMode: gameMode, status: status}) }}&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/li&gt;&#10;        {% endif %}&#10;    &lt;/ul&gt;&#10;&lt;/nav&gt;&#10;{% endif %}&#10;{% endblock %}&#10;&#10;{% block javascripts %}&#10;&lt;script&gt;&#10;async function deleteRoom(roomId, roomCode) {&#10;    if (!confirm(`Êtes-vous sûr de vouloir supprimer la salle &quot;${roomCode}&quot; ?\n\nCette action supprimera également toutes les sessions liées.`)) {&#10;        return;&#10;    }&#10;    &#10;    await executeAction(`{{ path('admin_room_delete', {id: '__ID__'})|replace({'__ID__': ''}) }}${roomId}`, null);&#10;}&#10;&lt;/script&gt;&#10;{% endblock %}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/admin/sessions.html.twig">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/admin/sessions.html.twig" />
              <option name="updatedContent" value="{% extends 'admin/base.html.twig' %}&#10;&#10;{% block page_title %}Sessions joueurs{% endblock %}&#10;&#10;{% block content %}&#10;&lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;    &lt;div&gt;&#10;        &lt;h5 class=&quot;mb-0&quot;&gt;Total: {{ total }} sessions&lt;/h5&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Filtres de recherche --&gt;&#10;&lt;div class=&quot;card mb-4&quot;&gt;&#10;    &lt;div class=&quot;card-body&quot;&gt;&#10;        &lt;form method=&quot;GET&quot; class=&quot;row g-3&quot;&gt;&#10;            &lt;div class=&quot;col-md-4&quot;&gt;&#10;                &lt;label for=&quot;search&quot; class=&quot;form-label&quot;&gt;Recherche&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;search&quot; name=&quot;search&quot; &#10;                       value=&quot;{{ search }}&quot; placeholder=&quot;Nom joueur, code salle ou titre...&quot;&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;col-md-2 d-flex align-items-end&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary me-2&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-search&quot;&gt;&lt;/i&gt;&#10;                &lt;/button&gt;&#10;                &lt;a href=&quot;{{ path('admin_sessions') }}&quot; class=&quot;btn btn-outline-secondary&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-times&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Tableau des sessions --&gt;&#10;&lt;div class=&quot;card&quot;&gt;&#10;    &lt;div class=&quot;card-body p-0&quot;&gt;&#10;        &lt;div class=&quot;table-responsive&quot;&gt;&#10;            &lt;table class=&quot;table table-admin mb-0&quot;&gt;&#10;                &lt;thead&gt;&#10;                    &lt;tr&gt;&#10;                        &lt;th&gt;Joueur&lt;/th&gt;&#10;                        &lt;th&gt;Salle&lt;/th&gt;&#10;                        &lt;th&gt;Score&lt;/th&gt;&#10;                        &lt;th&gt;Progression&lt;/th&gt;&#10;                        &lt;th&gt;Statut&lt;/th&gt;&#10;                        &lt;th&gt;Dernière activité&lt;/th&gt;&#10;                        &lt;th class=&quot;text-center&quot;&gt;Actions&lt;/th&gt;&#10;                    &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody&gt;&#10;                    {% for session in sessions %}&#10;                    &lt;tr class=&quot;{{ session.isCompleted ? 'table-success' : '' }}&quot;&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div class=&quot;d-flex align-items-center&quot;&gt;&#10;                                &lt;div class=&quot;bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2&quot; &#10;                                     style=&quot;width: 35px; height: 35px; font-size: 14px; font-weight: bold;&quot;&gt;&#10;                                    {{ session.playerName|slice(0, 2)|upper }}&#10;                                &lt;/div&gt;&#10;                                &lt;div&gt;&#10;                                    &lt;div class=&quot;fw-bold&quot;&gt;{{ session.playerName }}&lt;/div&gt;&#10;                                    &lt;small class=&quot;text-muted&quot;&gt;{{ session.ipAddress }}&lt;/small&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div&gt;&#10;                                &lt;code class=&quot;bg-primary text-white px-2 py-1 rounded&quot;&gt;{{ session.room.code }}&lt;/code&gt;&#10;                                &lt;span class=&quot;badge bg-{{ session.room.gameMode == 'cooperation' ? 'info' : 'primary' }} ms-1&quot;&gt;&#10;                                    {{ session.room.gameMode == 'cooperation' ? 'Coop' : 'Compét' }}&#10;                                &lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;text-truncate&quot; style=&quot;max-width: 200px;&quot; title=&quot;{{ session.room.title }}&quot;&gt;&#10;                                &lt;small class=&quot;text-muted&quot;&gt;{{ session.room.title }}&lt;/small&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div class=&quot;fw-bold text-{{ session.isCompleted ? 'success' : 'primary' }}&quot;&gt;&#10;                                {{ session.score|number_format(0, ',', ' ') }}&#10;                            &lt;/div&gt;&#10;                            {% if session.isCompleted %}&#10;                                &lt;small class=&quot;text-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-trophy me-1&quot;&gt;&lt;/i&gt;Terminé&#10;                                &lt;/small&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div class=&quot;d-flex align-items-center&quot;&gt;&#10;                                &lt;div class=&quot;me-2&quot;&gt;&#10;                                    &lt;div class=&quot;fw-bold&quot;&gt;{{ session.foundWords|length }} mots&lt;/div&gt;&#10;                                    &lt;small class=&quot;text-muted&quot;&gt;{{ session.attempts }} tentatives&lt;/small&gt;&#10;                                &lt;/div&gt;&#10;                                {% if session.foundWords|length &gt; 0 %}&#10;                                    &lt;div class=&quot;progress&quot; style=&quot;width: 60px; height: 8px;&quot;&gt;&#10;                                        {% set progressPercent = (session.foundWords|length / (session.room.wordsToFind|length)) * 100 %}&#10;                                        &lt;div class=&quot;progress-bar bg-success&quot; style=&quot;width: {{ progressPercent }}%&quot;&gt;&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                {% endif %}&#10;                            &lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            {% if session.isCompleted %}&#10;                                &lt;span class=&quot;badge bg-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-check me-1&quot;&gt;&lt;/i&gt;Terminé&#10;                                &lt;/span&gt;&#10;                                {% if session.completedAt %}&#10;                                    &lt;br&gt;&lt;small class=&quot;text-muted&quot;&gt;{{ session.completedAt|date('d/m H:i') }}&lt;/small&gt;&#10;                                {% endif %}&#10;                            {% elseif session.lastActivity &gt; date('-10 minutes') %}&#10;                                &lt;span class=&quot;badge bg-success&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-circle me-1&quot;&gt;&lt;/i&gt;En ligne&#10;                                &lt;/span&gt;&#10;                            {% elseif session.lastActivity &gt; date('-1 hour') %}&#10;                                &lt;span class=&quot;badge bg-warning&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-clock me-1&quot;&gt;&lt;/i&gt;Récent&#10;                                &lt;/span&gt;&#10;                            {% else %}&#10;                                &lt;span class=&quot;badge bg-secondary&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-moon me-1&quot;&gt;&lt;/i&gt;Inactif&#10;                                &lt;/span&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td&gt;&#10;                            &lt;div&gt;{{ session.lastActivity|date('d/m/Y') }}&lt;/div&gt;&#10;                            &lt;small class=&quot;text-muted&quot;&gt;{{ session.lastActivity|date('H:i:s') }}&lt;/small&gt;&#10;                            &#10;                            {% set timeDiff = date().timestamp - session.lastActivity.timestamp %}&#10;                            {% if timeDiff &lt; 3600 %}&#10;                                &lt;br&gt;&lt;small class=&quot;text-success&quot;&gt;Il y a {{ (timeDiff / 60)|round }} min&lt;/small&gt;&#10;                            {% elseif timeDiff &lt; 86400 %}&#10;                                &lt;br&gt;&lt;small class=&quot;text-warning&quot;&gt;Il y a {{ (timeDiff / 3600)|round }}h&lt;/small&gt;&#10;                            {% else %}&#10;                                &lt;br&gt;&lt;small class=&quot;text-muted&quot;&gt;Il y a {{ (timeDiff / 86400)|round }}j&lt;/small&gt;&#10;                            {% endif %}&#10;                        &lt;/td&gt;&#10;                        &lt;td class=&quot;text-center&quot;&gt;&#10;                            &lt;div class=&quot;btn-group&quot; role=&quot;group&quot;&gt;&#10;                                &lt;a href=&quot;{{ path('app_game_room', {roomCode: session.room.code}) }}&quot; &#10;                                   class=&quot;btn btn-sm btn-outline-primary&quot; target=&quot;_blank&quot; title=&quot;Voir la salle&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-eye&quot;&gt;&lt;/i&gt;&#10;                                &lt;/a&gt;&#10;                                &lt;button class=&quot;btn btn-sm btn-outline-info&quot; &#10;                                        onclick=&quot;showSessionDetails('{{ session.id }}')&quot; &#10;                                        title=&quot;Détails&quot;&gt;&#10;                                    &lt;i class=&quot;fas fa-info&quot;&gt;&lt;/i&gt;&#10;                                &lt;/button&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                    &lt;/tr&gt;&#10;                    {% else %}&#10;                    &lt;tr&gt;&#10;                        &lt;td colspan=&quot;7&quot; class=&quot;text-center text-muted py-5&quot;&gt;&#10;                            &lt;i class=&quot;fas fa-users fa-3x mb-3&quot;&gt;&lt;/i&gt;&#10;                            &lt;div&gt;Aucune session trouvée&lt;/div&gt;&#10;                        &lt;/td&gt;&#10;                    &lt;/tr&gt;&#10;                    {% endfor %}&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Pagination --&gt;&#10;{% if totalPages &gt; 1 %}&#10;&lt;nav aria-label=&quot;Pagination&quot; class=&quot;mt-4&quot;&gt;&#10;    &lt;ul class=&quot;pagination justify-content-center&quot;&gt;&#10;        {% if currentPage &gt; 1 %}&#10;            &lt;li class=&quot;page-item&quot;&gt;&#10;                &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_sessions', {page: currentPage - 1, search: search}) }}&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-left&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/li&gt;&#10;        {% endif %}&#10;        &#10;        {% for page in 1..totalPages %}&#10;            {% if page == currentPage %}&#10;                &lt;li class=&quot;page-item active&quot;&gt;&#10;                    &lt;span class=&quot;page-link&quot;&gt;{{ page }}&lt;/span&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page &lt;= currentPage + 2 and page &gt;= currentPage - 2 %}&#10;                &lt;li class=&quot;page-item&quot;&gt;&#10;                    &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_sessions', {page: page, search: search}) }}&quot;&gt;{{ page }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page == 1 or page == totalPages %}&#10;                &lt;li class=&quot;page-item&quot;&gt;&#10;                    &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_sessions', {page: page, search: search}) }}&quot;&gt;{{ page }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;            {% elseif page == currentPage + 3 or page == currentPage - 3 %}&#10;                &lt;li class=&quot;page-item disabled&quot;&gt;&#10;                    &lt;span class=&quot;page-link&quot;&gt;...&lt;/span&gt;&#10;                &lt;/li&gt;&#10;            {% endif %}&#10;        {% endfor %}&#10;        &#10;        {% if currentPage &lt; totalPages %}&#10;            &lt;li class=&quot;page-item&quot;&gt;&#10;                &lt;a class=&quot;page-link&quot; href=&quot;{{ path('admin_sessions', {page: currentPage + 1, search: search}) }}&quot;&gt;&#10;                    &lt;i class=&quot;fas fa-chevron-right&quot;&gt;&lt;/i&gt;&#10;                &lt;/a&gt;&#10;            &lt;/li&gt;&#10;        {% endif %}&#10;    &lt;/ul&gt;&#10;&lt;/nav&gt;&#10;{% endif %}&#10;&#10;&lt;!-- Modal pour les détails de session --&gt;&#10;&lt;div class=&quot;modal fade&quot; id=&quot;sessionDetailsModal&quot; tabindex=&quot;-1&quot;&gt;&#10;    &lt;div class=&quot;modal-dialog modal-lg&quot;&gt;&#10;        &lt;div class=&quot;modal-content&quot;&gt;&#10;            &lt;div class=&quot;modal-header&quot;&gt;&#10;                &lt;h5 class=&quot;modal-title&quot;&gt;Détails de la session&lt;/h5&gt;&#10;                &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;modal&quot;&gt;&lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;modal-body&quot; id=&quot;sessionDetailsContent&quot;&gt;&#10;                &lt;!-- Contenu chargé dynamiquement --&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;{% endblock %}&#10;&#10;{% block javascripts %}&#10;&lt;script&gt;&#10;function showSessionDetails(sessionId) {&#10;    // Pour l'instant, afficher les infos basiques&#10;    // Dans une version future, on pourrait charger plus de détails via AJAX&#10;    const modal = new bootstrap.Modal(document.getElementById('sessionDetailsModal'));&#10;    document.getElementById('sessionDetailsContent').innerHTML = `&#10;        &lt;div class=&quot;text-center&quot;&gt;&#10;            &lt;i class=&quot;fas fa-spinner fa-spin fa-2x mb-3&quot;&gt;&lt;/i&gt;&#10;            &lt;p&gt;Fonctionnalité en développement...&lt;/p&gt;&#10;            &lt;p class=&quot;text-muted&quot;&gt;Session ID: ${sessionId}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    `;&#10;    modal.show();&#10;}&#10;&lt;/script&gt;&#10;{% endblock %}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>