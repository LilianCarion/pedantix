<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/deploy.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/deploy.php" />
              <option name="originalContent" value="&lt;?php&#10;/**&#10; * Script de déploiement web automatique pour OVH avec gestion des chemins PHP&#10; * À exécuter UNE SEULE FOIS après upload via navigateur web&#10; * URL: http://analantix.ovh/deploy.php&#10; */&#10;&#10;// Configuration OVH pré-remplie&#10;$ovh_config = [&#10;    'db_host' =&gt; 'analanjroot.mysql.db',&#10;    'db_name' =&gt; 'analanjroot',&#10;    'db_user' =&gt; 'analanjroot',&#10;    'db_pass' =&gt; 'Bulls071201',&#10;    'domain' =&gt; 'analantix.ovh',&#10;    'app_secret' =&gt; 'a9f2c8e1b5d7h3k6m9p2q8r4t7w1x5z8y2b6c9e3f7j4n8s1v5y9a2d6g3k7m1p4'&#10;];&#10;&#10;// Détecter le chemin PHP correct pour OVH&#10;function findPhpPath() {&#10;    $possiblePaths = [&#10;        '/usr/local/php8.1/bin/php',&#10;        '/usr/local/php8.2/bin/php',&#10;        '/usr/local/php8.3/bin/php',&#10;        '/usr/bin/php8.1',&#10;        '/usr/bin/php8.2',&#10;        '/usr/bin/php8.3',&#10;        '/opt/alt/php81/usr/bin/php',&#10;        '/opt/alt/php82/usr/bin/php',&#10;        '/opt/alt/php83/usr/bin/php',&#10;        'php8.1',&#10;        'php8.2',&#10;        'php8.3',&#10;        'php'&#10;    ];&#10;&#10;    foreach ($possiblePaths as $path) {&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$path --version 2&gt;/dev/null&quot;, $output, $returnCode);&#10;        if ($returnCode === 0 &amp;&amp; !empty($output)) {&#10;            return $path;&#10;        }&#10;    }&#10;&#10;    return 'php'; // Fallback&#10;}&#10;&#10;// Vérifier que nous sommes bien sur le serveur&#10;$isLocal = in_array($_SERVER['HTTP_HOST'], ['localhost', '127.0.0.1']) ||&#10;           strpos($_SERVER['HTTP_HOST'], 'localhost:') === 0;&#10;&#10;if ($isLocal) {&#10;    die('⚠️ Ce script est destiné au serveur de production seulement.');&#10;}&#10;&#10;// Traitement automatique&#10;if ($_SERVER['REQUEST_METHOD'] === 'POST' || isset($_GET['auto'])) {&#10;    header('Content-Type: application/json; charset=utf-8');&#10;&#10;    $steps = [];&#10;    $allSuccess = true;&#10;&#10;    try {&#10;        // Détecter le chemin PHP&#10;        $phpPath = findPhpPath();&#10;&#10;        // Étape 1: Vérification de l'environnement&#10;        $steps[] = ['step' =&gt; 1, 'description' =&gt; 'Détection de l\'environnement PHP'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath --version 2&gt;&amp;1&quot;, $output, $returnCode);&#10;&#10;        if ($returnCode !== 0) {&#10;            throw new \Exception('PHP introuvable sur le serveur. Contactez votre hébergeur OVH.');&#10;        }&#10;&#10;        $phpVersion = implode(&quot;\n&quot;, $output);&#10;        $steps[0]['success'] = true;&#10;        $steps[0]['output'] = &quot;PHP détecté: $phpPath\n$phpVersion&quot;;&#10;&#10;        // Étape 2: Créer le fichier .env automatiquement&#10;        $steps[] = ['step' =&gt; 2, 'description' =&gt; 'Configuration automatique .env'];&#10;&#10;        $envContent = &quot;# Configuration générée automatiquement pour OVH\n&quot;;&#10;        $envContent .= &quot;APP_ENV=prod\n&quot;;&#10;        $envContent .= &quot;APP_SECRET=&quot; . $ovh_config['app_secret'] . &quot;\n&quot;;&#10;        $envContent .= &quot;APP_DEBUG=0\n\n&quot;;&#10;        $envContent .= &quot;# Base de données OVH\n&quot;;&#10;        $envContent .= &quot;DATABASE_URL=\&quot;mysql://{$ovh_config['db_user']}:{$ovh_config['db_pass']}@{$ovh_config['db_host']}:3306/{$ovh_config['db_name']}?serverVersion=8.0&amp;charset=utf8mb4\&quot;\n\n&quot;;&#10;        $envContent .= &quot;# Configuration serveur\n&quot;;&#10;        $envContent .= &quot;TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16\n&quot;;&#10;        $envContent .= &quot;TRUSTED_HOSTS='^(localhost|127\\.0\\.0\\.1|&quot; . preg_quote($ovh_config['domain'], '/') . &quot;)$'\n&quot;;&#10;&#10;        if (file_put_contents('.env', $envContent) === false) {&#10;            throw new Exception('Impossible de créer le fichier .env');&#10;        }&#10;        $steps[1]['success'] = true;&#10;&#10;        // Étape 3: Installer Composer avec le bon chemin PHP&#10;        $steps[] = ['step' =&gt; 3, 'description' =&gt; 'Installation de Composer avec PHP détecté'];&#10;&#10;        if (!file_exists('composer.phar')) {&#10;            $composerContent = file_get_contents('https://getcomposer.org/composer.phar');&#10;            if ($composerContent === false) {&#10;                throw new Exception('Impossible de télécharger Composer');&#10;            }&#10;            file_put_contents('composer.phar', $composerContent);&#10;            chmod('composer.phar', 0755);&#10;        }&#10;        $steps[2]['success'] = true;&#10;&#10;        // Étape 4: Installer les dépendances avec le bon chemin PHP&#10;        $steps[] = ['step' =&gt; 4, 'description' =&gt; 'Installation des dépendances PHP'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath composer.phar install --no-dev --optimize-autoloader --no-interaction 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        $steps[3]['success'] = $returnCode === 0;&#10;        $steps[3]['output'] = implode(&quot;\n&quot;, $output);&#10;&#10;        if (!$steps[3]['success']) {&#10;            throw new Exception('Échec de l\'installation des dépendances');&#10;        }&#10;&#10;        // Étape 5: Créer la base de données&#10;        $steps[] = ['step' =&gt; 5, 'description' =&gt; 'Configuration de la base de données'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath bin/console doctrine:database:create --if-not-exists --no-interaction 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        $steps[4]['success'] = $returnCode === 0;&#10;        $steps[4]['output'] = implode(&quot;\n&quot;, $output);&#10;&#10;        // Continuer même si la base existe déjà&#10;&#10;        // Étape 6: Exécuter les migrations&#10;        $steps[] = ['step' =&gt; 6, 'description' =&gt; 'Exécution des migrations'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath bin/console doctrine:migrations:migrate --no-interaction 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        $steps[5]['success'] = $returnCode === 0;&#10;        $steps[5]['output'] = implode(&quot;\n&quot;, $output);&#10;&#10;        if (!$steps[5]['success']) {&#10;            throw new Exception('Échec des migrations');&#10;        }&#10;&#10;        // Étape 7: Nettoyer le cache&#10;        $steps[] = ['step' =&gt; 7, 'description' =&gt; 'Nettoyage du cache'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath bin/console cache:clear --env=prod --no-debug 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        $steps[6]['success'] = $returnCode === 0;&#10;        $steps[6]['output'] = implode(&quot;\n&quot;, $output);&#10;&#10;        if (!$steps[6]['success']) {&#10;            throw new Exception('Échec du nettoyage du cache');&#10;        }&#10;&#10;        // Étape 8: Peupler avec les articles Wikipedia&#10;        $steps[] = ['step' =&gt; 8, 'description' =&gt; 'Peuplement des articles Wikipedia'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath bin/console app:seed-wikipedia-articles 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        $steps[7]['success'] = $returnCode === 0;&#10;        $steps[7]['output'] = implode(&quot;\n&quot;, $output);&#10;&#10;        if (!$steps[7]['success']) {&#10;            // Continuer même si ça échoue, les articles peuvent être ajoutés manuellement&#10;            $steps[7]['warning'] = 'Articles non chargés automatiquement - ils seront ajoutés lors de la première utilisation';&#10;        }&#10;&#10;        // Étape 9: Configuration des permissions&#10;        $steps[] = ['step' =&gt; 9, 'description' =&gt; 'Configuration des permissions'];&#10;&#10;        if (is_dir('var/cache')) {&#10;            chmod('var/cache', 0775);&#10;        }&#10;        if (is_dir('var/log')) {&#10;            chmod('var/log', 0775);&#10;        }&#10;&#10;        $steps[8]['success'] = true;&#10;&#10;        // Étape 10: Test final&#10;        $steps[] = ['step' =&gt; 10, 'description' =&gt; 'Test de l\'installation'];&#10;&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath bin/console debug:container --env=prod 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        $steps[9]['success'] = $returnCode === 0;&#10;        $steps[9]['output'] = implode(&quot;\n&quot;, $output);&#10;&#10;        if (!$steps[9]['success']) {&#10;            throw new Exception('Test final échoué');&#10;        }&#10;&#10;        // Compter les articles en base&#10;        $articleCount = 0;&#10;        try {&#10;            $output = [];&#10;            exec(&quot;$phpPath bin/console doctrine:query:sql 'SELECT COUNT(*) as count FROM wikipedia_article' --quiet 2&gt;&amp;1&quot;, $output, $returnCode);&#10;            if ($returnCode === 0 &amp;&amp; !empty($output)) {&#10;                foreach ($output as $line) {&#10;                    if (preg_match('/(\d+)/', $line, $matches)) {&#10;                        $articleCount = (int)$matches[1];&#10;                        break;&#10;                    }&#10;                }&#10;            }&#10;        } catch (Exception $e) {&#10;            // Ignorer les erreurs de comptage&#10;        }&#10;&#10;        echo json_encode([&#10;            'success' =&gt; true,&#10;            'message' =&gt; 'Déploiement réussi !',&#10;            'data' =&gt; [&#10;                'steps' =&gt; $steps,&#10;                'article_count' =&gt; $articleCount,&#10;                'php_path' =&gt; $phpPath,&#10;                'domain' =&gt; $ovh_config['domain'],&#10;                'next_steps' =&gt; [&#10;                    'Votre Pedantix est maintenant opérationnel !',&#10;                    'Configurez votre serveur web pour pointer vers public/',&#10;                    'Supprimez ce fichier deploy.php pour la sécurité',&#10;                    'Accédez à votre site via: http://' . $ovh_config['domain'],&#10;                    &quot;Articles Wikipedia en base: $articleCount&quot;,&#10;                    &quot;PHP utilisé: $phpPath&quot;&#10;                ]&#10;            ]&#10;        ], JSON_UNESCAPED_UNICODE);&#10;&#10;    } catch (Exception $e) {&#10;        echo json_encode([&#10;            'success' =&gt; false,&#10;            'message' =&gt; 'Erreur lors du déploiement: ' . $e-&gt;getMessage(),&#10;            'data' =&gt; ['steps' =&gt; $steps, 'php_path' =&gt; $phpPath ?? 'non détecté']&#10;        ], JSON_UNESCAPED_UNICODE);&#10;    }&#10;    exit;&#10;}&#10;&#10;// Interface HTML&#10;?&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Déploiement Pedantix OVH&lt;/title&gt;&#10;    &lt;style&gt;&#10;        body {&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            max-width: 800px;&#10;            margin: 0 auto;&#10;            padding: 20px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            min-height: 100vh;&#10;        }&#10;&#10;        .container {&#10;            background: white;&#10;            padding: 30px;&#10;            border-radius: 15px;&#10;            box-shadow: 0 10px 30px rgba(0,0,0,0.2);&#10;        }&#10;&#10;        h1 { color: #333; text-align: center; margin-bottom: 30px; }&#10;&#10;        .config-display {&#10;            background: #f8f9fa;&#10;            padding: 20px;&#10;            border-radius: 8px;&#10;            margin: 20px 0;&#10;        }&#10;&#10;        .btn {&#10;            background: linear-gradient(45deg, #667eea, #764ba2);&#10;            color: white;&#10;            padding: 15px 30px;&#10;            border: none;&#10;            border-radius: 8px;&#10;            font-size: 16px;&#10;            font-weight: bold;&#10;            cursor: pointer;&#10;            width: 100%;&#10;            margin-top: 20px;&#10;        }&#10;&#10;        .btn:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .step {&#10;            padding: 10px;&#10;            margin: 5px 0;&#10;            border-radius: 5px;&#10;            border-left: 4px solid #ccc;&#10;        }&#10;&#10;        .step.success {&#10;            background: #d4edda;&#10;            border-left-color: #28a745;&#10;        }&#10;&#10;        .step.error {&#10;            background: #f8d7da;&#10;            border-left-color: #dc3545;&#10;        }&#10;&#10;        .alert {&#10;            padding: 15px;&#10;            margin: 20px 0;&#10;            border-radius: 5px;&#10;        }&#10;&#10;        .alert-success {&#10;            background: #d4edda;&#10;            color: #155724;&#10;            border: 1px solid #c3e6cb;&#10;        }&#10;&#10;        .alert-danger {&#10;            background: #f8d7da;&#10;            color: #721c24;&#10;            border: 1px solid #f5c6cb;&#10;        }&#10;&#10;        #progress { display: none; margin-top: 20px; }&#10;        #result { display: none; }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h1&gt; Déploiement Pedantix OVH&lt;/h1&gt;&#10;&#10;        &lt;div id=&quot;form-section&quot;&gt;&#10;            &lt;p&gt;&lt;strong&gt;Configuration automatique détectée :&lt;/strong&gt;&lt;/p&gt;&#10;&#10;            &lt;div class=&quot;config-display&quot;&gt;&#10;                &lt;h4&gt; Paramètres OVH configurés :&lt;/h4&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Base de données :&lt;/strong&gt; &lt;?php echo $ovh_config['db_name']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Host :&lt;/strong&gt; &lt;?php echo $ovh_config['db_host']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Utilisateur :&lt;/strong&gt; &lt;?php echo $ovh_config['db_user']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Domaine :&lt;/strong&gt; &lt;?php echo $ovh_config['domain']; ?&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;&#10;                &lt;div class=&quot;alert alert-info&quot;&gt;&#10;                    &lt;h5&gt; Détection automatique du PHP&lt;/h5&gt;&#10;                    &lt;p&gt;Le script détectera automatiquement le bon chemin PHP sur votre serveur OVH (php8.1, php8.2, etc.)&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;p&gt;Cliquez sur le bouton ci-dessous pour démarrer le déploiement automatique. Toute la configuration est déjà prête !&lt;/p&gt;&#10;&#10;            &lt;button onclick=&quot;startDeployment()&quot; class=&quot;btn&quot; id=&quot;deployBtn&quot;&gt;&#10;                 Démarrer le déploiement automatique&#10;            &lt;/button&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div id=&quot;progress&quot;&gt;&#10;            &lt;h3&gt;Déploiement en cours...&lt;/h3&gt;&#10;            &lt;div id=&quot;steps&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script&gt;&#10;        function startDeployment() {&#10;            document.getElementById('form-section').style.display = 'none';&#10;            document.getElementById('progress').style.display = 'block';&#10;&#10;            const stepsContainer = document.getElementById('steps');&#10;&#10;            fetch(window.location.href + '?auto=1', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                }&#10;            })&#10;            .then(response =&gt; response.json())&#10;            .then(result =&gt; {&#10;                if (result.success) {&#10;                    // Afficher les étapes réussies&#10;                    if (result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre style=&quot;font-size: 12px; margin-top: 10px; max-height: 200px; overflow-y: auto;&quot;&gt;' + step.output.substring(0, 1000) + (step.output.length &gt; 1000 ? '...' : '') + '&lt;/pre&gt;' : ''}&#10;                                ${step.warning ? '&lt;div style=&quot;color: orange;&quot;&gt;⚠️ ' + step.warning + '&lt;/div&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-success&quot;&gt;&#10;                            &lt;h3&gt;✅ Déploiement réussi !&lt;/h3&gt;&#10;                            &lt;p&gt;&lt;strong&gt;Articles en base :&lt;/strong&gt; ${result.data.article_count || 0}&lt;/p&gt;&#10;                            &lt;p&gt;&lt;strong&gt;PHP utilisé :&lt;/strong&gt; ${result.data.php_path || 'Détecté automatiquement'}&lt;/p&gt;&#10;                            &lt;p&gt;&lt;strong&gt;URL :&lt;/strong&gt; &lt;a href=&quot;http://${result.data.domain}&quot; target=&quot;_blank&quot;&gt;http://${result.data.domain}&lt;/a&gt;&lt;/p&gt;&#10;                            &lt;h4&gt;Prochaines étapes :&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                ${result.data.next_steps.map(step =&gt; '&lt;li&gt;' + step + '&lt;/li&gt;').join('')}&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                } else {&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                            &lt;h3&gt;❌ Erreur de déploiement&lt;/h3&gt;&#10;                            &lt;p&gt;${result.message}&lt;/p&gt;&#10;                            ${result.data.php_path ? '&lt;p&gt;&lt;strong&gt;PHP détecté :&lt;/strong&gt; ' + result.data.php_path + '&lt;/p&gt;' : ''}&#10;                        &lt;/div&gt;&#10;                    `;&#10;&#10;                    if (result.data &amp;&amp; result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre style=&quot;font-size: 12px; max-height: 200px; overflow-y: auto;&quot;&gt;' + step.output + '&lt;/pre&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;                }&#10;&#10;                document.getElementById('result').style.display = 'block';&#10;&#10;            })&#10;            .catch(error =&gt; {&#10;                document.getElementById('result').innerHTML = `&#10;                    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                        &lt;h3&gt;❌ Erreur de connexion&lt;/h3&gt;&#10;                        &lt;p&gt;Impossible de communiquer avec le serveur : ${error.message}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;                document.getElementById('result').style.display = 'block';&#10;            });&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;/**&#10; * Script de déploiement web automatique pour OVH avec gestion des chemins PHP&#10; * À exécuter UNE SEULE FOIS après upload via navigateur web&#10; * URL: http://analantix.ovh/deploy.php&#10; */&#10;&#10;// Configuration OVH pré-remplie&#10;$ovh_config = [&#10;    'db_host' =&gt; 'analanjroot.mysql.db',&#10;    'db_name' =&gt; 'analanjroot',&#10;    'db_user' =&gt; 'analanjroot',&#10;    'db_pass' =&gt; 'Bulls071201',&#10;    'domain' =&gt; 'analantix.ovh',&#10;    'app_secret' =&gt; 'a9f2c8e1b5d7h3k6m9p2q8r4t7w1x5z8y2b6c9e3f7j4n8s1v5y9a2d6g3k7m1p4'&#10;];&#10;&#10;// Détecter le chemin PHP correct pour OVH&#10;function findPhpPath() {&#10;    $possiblePaths = [&#10;        '/usr/local/php8.1/bin/php',&#10;        '/usr/local/php8.2/bin/php', &#10;        '/usr/local/php8.3/bin/php',&#10;        '/usr/bin/php8.1',&#10;        '/usr/bin/php8.2',&#10;        '/usr/bin/php8.3',&#10;        '/opt/alt/php81/usr/bin/php',&#10;        '/opt/alt/php82/usr/bin/php',&#10;        '/opt/alt/php83/usr/bin/php',&#10;        'php8.1',&#10;        'php8.2', &#10;        'php8.3',&#10;        'php'&#10;    ];&#10;    &#10;    foreach ($possiblePaths as $path) {&#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$path --version 2&gt;/dev/null&quot;, $output, $returnCode);&#10;        if ($returnCode === 0 &amp;&amp; !empty($output)) {&#10;            return $path;&#10;        }&#10;    }&#10;    &#10;    return 'php'; // Fallback&#10;}&#10;&#10;// Configurer les variables d'environnement pour Composer&#10;function setupComposerEnvironment() {&#10;    $homeDir = getcwd() . '/composer_home';&#10;    &#10;    // Créer le répertoire home pour Composer s'il n'existe pas&#10;    if (!is_dir($homeDir)) {&#10;        mkdir($homeDir, 0755, true);&#10;    }&#10;    &#10;    // Définir les variables d'environnement&#10;    putenv(&quot;HOME=$homeDir&quot;);&#10;    putenv(&quot;COMPOSER_HOME=$homeDir&quot;);&#10;    putenv(&quot;COMPOSER_CACHE_DIR=$homeDir/cache&quot;);&#10;    &#10;    return $homeDir;&#10;}&#10;&#10;// Exécuter une commande avec les bonnes variables d'environnement&#10;function execWithEnv($command, $phpPath) {&#10;    $homeDir = getcwd() . '/composer_home';&#10;    &#10;    // Construire la commande avec les variables d'environnement&#10;    $envVars = [&#10;        &quot;HOME=$homeDir&quot;,&#10;        &quot;COMPOSER_HOME=$homeDir&quot;,&#10;        &quot;COMPOSER_CACHE_DIR=$homeDir/cache&quot;&#10;    ];&#10;    &#10;    $fullCommand = implode(' ', $envVars) . ' ' . $command;&#10;    &#10;    $output = [];&#10;    $returnCode = 0;&#10;    exec($fullCommand . ' 2&gt;&amp;1', $output, $returnCode);&#10;    &#10;    return [&#10;        'success' =&gt; $returnCode === 0,&#10;        'output' =&gt; implode(&quot;\n&quot;, $output),&#10;        'return_code' =&gt; $returnCode&#10;    ];&#10;}&#10;&#10;// Vérifier que nous sommes bien sur le serveur&#10;$isLocal = in_array($_SERVER['HTTP_HOST'], ['localhost', '127.0.0.1']) || &#10;           strpos($_SERVER['HTTP_HOST'], 'localhost:') === 0;&#10;&#10;if ($isLocal) {&#10;    die('⚠️ Ce script est destiné au serveur de production seulement.');&#10;}&#10;&#10;// Traitement automatique&#10;if ($_SERVER['REQUEST_METHOD'] === 'POST' || isset($_GET['auto'])) {&#10;    header('Content-Type: application/json; charset=utf-8');&#10;    &#10;    $steps = [];&#10;    $allSuccess = true;&#10;    &#10;    try {&#10;        // Configurer l'environnement Composer&#10;        $homeDir = setupComposerEnvironment();&#10;        &#10;        // Détecter le chemin PHP&#10;        $phpPath = findPhpPath();&#10;        &#10;        // Étape 1: Vérification de l'environnement&#10;        $steps[] = ['step' =&gt; 1, 'description' =&gt; 'Détection de l\'environnement PHP et configuration Composer'];&#10;        &#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec(&quot;$phpPath --version 2&gt;&amp;1&quot;, $output, $returnCode);&#10;        &#10;        if ($returnCode !== 0) {&#10;            throw new \Exception('PHP introuvable sur le serveur. Contactez votre hébergeur OVH.');&#10;        }&#10;        &#10;        $phpVersion = implode(&quot;\n&quot;, $output);&#10;        $steps[0]['success'] = true;&#10;        $steps[0]['output'] = &quot;PHP détecté: $phpPath\n$phpVersion\nComposer HOME: $homeDir&quot;;&#10;        &#10;        // Étape 2: Créer le fichier .env automatiquement&#10;        $steps[] = ['step' =&gt; 2, 'description' =&gt; 'Configuration automatique .env'];&#10;        &#10;        $envContent = &quot;# Configuration générée automatiquement pour OVH\n&quot;;&#10;        $envContent .= &quot;APP_ENV=prod\n&quot;;&#10;        $envContent .= &quot;APP_SECRET=&quot; . $ovh_config['app_secret'] . &quot;\n&quot;;&#10;        $envContent .= &quot;APP_DEBUG=0\n\n&quot;;&#10;        $envContent .= &quot;# Base de données OVH\n&quot;;&#10;        $envContent .= &quot;DATABASE_URL=\&quot;mysql://{$ovh_config['db_user']}:{$ovh_config['db_pass']}@{$ovh_config['db_host']}:3306/{$ovh_config['db_name']}?serverVersion=8.0&amp;charset=utf8mb4\&quot;\n\n&quot;;&#10;        $envContent .= &quot;# Configuration serveur\n&quot;;&#10;        $envContent .= &quot;TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16\n&quot;;&#10;        $envContent .= &quot;TRUSTED_HOSTS='^(localhost|127\\.0\\.0\\.1|&quot; . preg_quote($ovh_config['domain'], '/') . &quot;)$'\n&quot;;&#10;        &#10;        if (file_put_contents('.env', $envContent) === false) {&#10;            throw new Exception('Impossible de créer le fichier .env');&#10;        }&#10;        $steps[1]['success'] = true;&#10;        &#10;        // Étape 3: Installer Composer avec le bon chemin PHP&#10;        $steps[] = ['step' =&gt; 3, 'description' =&gt; 'Installation de Composer avec PHP détecté'];&#10;        &#10;        if (!file_exists('composer.phar')) {&#10;            $composerContent = file_get_contents('https://getcomposer.org/composer.phar');&#10;            if ($composerContent === false) {&#10;                throw new Exception('Impossible de télécharger Composer');&#10;            }&#10;            file_put_contents('composer.phar', $composerContent);&#10;            chmod('composer.phar', 0755);&#10;        }&#10;        $steps[2]['success'] = true;&#10;        &#10;        // Étape 4: Installer les dépendances avec le bon chemin PHP et les variables d'environnement&#10;        $steps[] = ['step' =&gt; 4, 'description' =&gt; 'Installation des dépendances PHP avec variables d\'environnement'];&#10;        &#10;        $result = execWithEnv(&quot;$phpPath composer.phar install --no-dev --optimize-autoloader --no-interaction&quot;, $phpPath);&#10;        $steps[3]['success'] = $result['success'];&#10;        $steps[3]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Échec de l\'installation des dépendances: ' . $result['output']);&#10;        }&#10;        &#10;        // Étape 5: Créer la base de données&#10;        $steps[] = ['step' =&gt; 5, 'description' =&gt; 'Configuration de la base de données'];&#10;        &#10;        $result = execWithEnv(&quot;$phpPath bin/console doctrine:database:create --if-not-exists --no-interaction&quot;, $phpPath);&#10;        $steps[4]['success'] = $result['success'];&#10;        $steps[4]['output'] = $result['output'];&#10;        &#10;        // Continuer même si la base existe déjà&#10;        &#10;        // Étape 6: Exécuter les migrations&#10;        $steps[] = ['step' =&gt; 6, 'description' =&gt; 'Exécution des migrations'];&#10;        &#10;        $result = execWithEnv(&quot;$phpPath bin/console doctrine:migrations:migrate --no-interaction&quot;, $phpPath);&#10;        $steps[5]['success'] = $result['success'];&#10;        $steps[5]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Échec des migrations: ' . $result['output']);&#10;        }&#10;        &#10;        // Étape 7: Nettoyer le cache&#10;        $steps[] = ['step' =&gt; 7, 'description' =&gt; 'Nettoyage du cache'];&#10;        &#10;        $result = execWithEnv(&quot;$phpPath bin/console cache:clear --env=prod --no-debug&quot;, $phpPath);&#10;        $steps[6]['success'] = $result['success'];&#10;        $steps[6]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Échec du nettoyage du cache: ' . $result['output']);&#10;        }&#10;        &#10;        // Étape 8: Peupler avec les articles Wikipedia&#10;        $steps[] = ['step' =&gt; 8, 'description' =&gt; 'Peuplement des articles Wikipedia'];&#10;        &#10;        $result = execWithEnv(&quot;$phpPath bin/console app:seed-wikipedia-articles&quot;, $phpPath);&#10;        $steps[7]['success'] = $result['success'];&#10;        $steps[7]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            // Continuer même si ça échoue, les articles peuvent être ajoutés manuellement&#10;            $steps[7]['warning'] = 'Articles non chargés automatiquement - ils seront ajoutés lors de la première utilisation';&#10;        }&#10;        &#10;        // Étape 9: Configuration des permissions&#10;        $steps[] = ['step' =&gt; 9, 'description' =&gt; 'Configuration des permissions'];&#10;        &#10;        if (is_dir('var/cache')) {&#10;            chmod('var/cache', 0775);&#10;        }&#10;        if (is_dir('var/log')) {&#10;            chmod('var/log', 0775);&#10;        }&#10;        &#10;        $steps[8]['success'] = true;&#10;        &#10;        // Étape 10: Test final&#10;        $steps[] = ['step' =&gt; 10, 'description' =&gt; 'Test de l\'installation'];&#10;        &#10;        $result = execWithEnv(&quot;$phpPath bin/console debug:container --env=prod&quot;, $phpPath);&#10;        $steps[9]['success'] = $result['success'];&#10;        $steps[9]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Test final échoué: ' . $result['output']);&#10;        }&#10;        &#10;        // Compter les articles en base&#10;        $articleCount = 0;&#10;        try {&#10;            $result = execWithEnv(&quot;$phpPath bin/console doctrine:query:sql 'SELECT COUNT(*) as count FROM wikipedia_article' --quiet&quot;, $phpPath);&#10;            if ($result['success'] &amp;&amp; !empty($result['output'])) {&#10;                preg_match('/(\d+)/', $result['output'], $matches);&#10;                $articleCount = isset($matches[1]) ? (int)$matches[1] : 0;&#10;            }&#10;        } catch (Exception $e) {&#10;            // Ignorer les erreurs de comptage&#10;        }&#10;        &#10;        echo json_encode([&#10;            'success' =&gt; true,&#10;            'message' =&gt; 'Déploiement réussi !',&#10;            'data' =&gt; [&#10;                'steps' =&gt; $steps,&#10;                'article_count' =&gt; $articleCount,&#10;                'php_path' =&gt; $phpPath,&#10;                'composer_home' =&gt; $homeDir,&#10;                'domain' =&gt; $ovh_config['domain'],&#10;                'next_steps' =&gt; [&#10;                    'Votre Pedantix est maintenant opérationnel !',&#10;                    'Configurez votre serveur web pour pointer vers public/',&#10;                    'Supprimez ce fichier deploy.php pour la sécurité',&#10;                    'Accédez à votre site via: http://' . $ovh_config['domain'],&#10;                    &quot;Articles Wikipedia en base: $articleCount&quot;,&#10;                    &quot;PHP utilisé: $phpPath&quot;,&#10;                    &quot;Composer HOME: $homeDir&quot;&#10;                ]&#10;            ]&#10;        ], JSON_UNESCAPED_UNICODE);&#10;        &#10;    } catch (Exception $e) {&#10;        echo json_encode([&#10;            'success' =&gt; false,&#10;            'message' =&gt; 'Erreur lors du déploiement: ' . $e-&gt;getMessage(),&#10;            'data' =&gt; ['steps' =&gt; $steps, 'php_path' =&gt; $phpPath ?? 'non détecté', 'composer_home' =&gt; $homeDir ?? 'non configuré']&#10;        ], JSON_UNESCAPED_UNICODE);&#10;    }&#10;    exit;&#10;}&#10;&#10;// Interface HTML&#10;?&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Déploiement Pedantix OVH&lt;/title&gt;&#10;    &lt;style&gt;&#10;        body {&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            max-width: 800px;&#10;            margin: 0 auto;&#10;            padding: 20px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            min-height: 100vh;&#10;        }&#10;&#10;        .container {&#10;            background: white;&#10;            padding: 30px;&#10;            border-radius: 15px;&#10;            box-shadow: 0 10px 30px rgba(0,0,0,0.2);&#10;        }&#10;&#10;        h1 { color: #333; text-align: center; margin-bottom: 30px; }&#10;&#10;        .config-display {&#10;            background: #f8f9fa;&#10;            padding: 20px;&#10;            border-radius: 8px;&#10;            margin: 20px 0;&#10;        }&#10;&#10;        .btn {&#10;            background: linear-gradient(45deg, #667eea, #764ba2);&#10;            color: white;&#10;            padding: 15px 30px;&#10;            border: none;&#10;            border-radius: 8px;&#10;            font-size: 16px;&#10;            font-weight: bold;&#10;            cursor: pointer;&#10;            width: 100%;&#10;            margin-top: 20px;&#10;        }&#10;&#10;        .btn:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;&#10;        .step {&#10;            padding: 10px;&#10;            margin: 5px 0;&#10;            border-radius: 5px;&#10;            border-left: 4px solid #ccc;&#10;        }&#10;&#10;        .step.success {&#10;            background: #d4edda;&#10;            border-left-color: #28a745;&#10;        }&#10;&#10;        .step.error {&#10;            background: #f8d7da;&#10;            border-left-color: #dc3545;&#10;        }&#10;&#10;        .alert {&#10;            padding: 15px;&#10;            margin: 20px 0;&#10;            border-radius: 5px;&#10;        }&#10;&#10;        .alert-success {&#10;            background: #d4edda;&#10;            color: #155724;&#10;            border: 1px solid #c3e6cb;&#10;        }&#10;&#10;        .alert-danger {&#10;            background: #f8d7da;&#10;            color: #721c24;&#10;            border: 1px solid #f5c6cb;&#10;        }&#10;&#10;        #progress { display: none; margin-top: 20px; }&#10;        #result { display: none; }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h1&gt; Déploiement Pedantix OVH&lt;/h1&gt;&#10;&#10;        &lt;div id=&quot;form-section&quot;&gt;&#10;            &lt;p&gt;&lt;strong&gt;Configuration automatique détectée :&lt;/strong&gt;&lt;/p&gt;&#10;&#10;            &lt;div class=&quot;config-display&quot;&gt;&#10;                &lt;h4&gt; Paramètres OVH configurés :&lt;/h4&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Base de données :&lt;/strong&gt; &lt;?php echo $ovh_config['db_name']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Host :&lt;/strong&gt; &lt;?php echo $ovh_config['db_host']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Utilisateur :&lt;/strong&gt; &lt;?php echo $ovh_config['db_user']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Domaine :&lt;/strong&gt; &lt;?php echo $ovh_config['domain']; ?&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;&#10;                &lt;div class=&quot;alert alert-info&quot;&gt;&#10;                    &lt;h5&gt; Détection automatique du PHP&lt;/h5&gt;&#10;                    &lt;p&gt;Le script détectera automatiquement le bon chemin PHP sur votre serveur OVH (php8.1, php8.2, etc.)&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;p&gt;Cliquez sur le bouton ci-dessous pour démarrer le déploiement automatique. Toute la configuration est déjà prête !&lt;/p&gt;&#10;&#10;            &lt;button onclick=&quot;startDeployment()&quot; class=&quot;btn&quot; id=&quot;deployBtn&quot;&gt;&#10;                 Démarrer le déploiement automatique&#10;            &lt;/button&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div id=&quot;progress&quot;&gt;&#10;            &lt;h3&gt;Déploiement en cours...&lt;/h3&gt;&#10;            &lt;div id=&quot;steps&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script&gt;&#10;        function startDeployment() {&#10;            document.getElementById('form-section').style.display = 'none';&#10;            document.getElementById('progress').style.display = 'block';&#10;&#10;            const stepsContainer = document.getElementById('steps');&#10;&#10;            fetch(window.location.href + '?auto=1', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                }&#10;            })&#10;            .then(response =&gt; response.json())&#10;            .then(result =&gt; {&#10;                if (result.success) {&#10;                    // Afficher les étapes réussies&#10;                    if (result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre style=&quot;font-size: 12px; margin-top: 10px; max-height: 200px; overflow-y: auto;&quot;&gt;' + step.output.substring(0, 1000) + (step.output.length &gt; 1000 ? '...' : '') + '&lt;/pre&gt;' : ''}&#10;                                ${step.warning ? '&lt;div style=&quot;color: orange;&quot;&gt;⚠️ ' + step.warning + '&lt;/div&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-success&quot;&gt;&#10;                            &lt;h3&gt;✅ Déploiement réussi !&lt;/h3&gt;&#10;                            &lt;p&gt;&lt;strong&gt;Articles en base :&lt;/strong&gt; ${result.data.article_count || 0}&lt;/p&gt;&#10;                            &lt;p&gt;&lt;strong&gt;PHP utilisé :&lt;/strong&gt; ${result.data.php_path || 'Détecté automatiquement'}&lt;/p&gt;&#10;                            &lt;p&gt;&lt;strong&gt;URL :&lt;/strong&gt; &lt;a href=&quot;http://${result.data.domain}&quot; target=&quot;_blank&quot;&gt;http://${result.data.domain}&lt;/a&gt;&lt;/p&gt;&#10;                            &lt;h4&gt;Prochaines étapes :&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                ${result.data.next_steps.map(step =&gt; '&lt;li&gt;' + step + '&lt;/li&gt;').join('')}&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                } else {&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                            &lt;h3&gt;❌ Erreur de déploiement&lt;/h3&gt;&#10;                            &lt;p&gt;${result.message}&lt;/p&gt;&#10;                            ${result.data.php_path ? '&lt;p&gt;&lt;strong&gt;PHP détecté :&lt;/strong&gt; ' + result.data.php_path + '&lt;/p&gt;' : ''}&#10;                        &lt;/div&gt;&#10;                    `;&#10;&#10;                    if (result.data &amp;&amp; result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre style=&quot;font-size: 12px; max-height: 200px; overflow-y: auto;&quot;&gt;' + step.output + '&lt;/pre&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;                }&#10;&#10;                document.getElementById('result').style.display = 'block';&#10;&#10;            })&#10;            .catch(error =&gt; {&#10;                document.getElementById('result').innerHTML = `&#10;                    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                        &lt;h3&gt;❌ Erreur de connexion&lt;/h3&gt;&#10;                        &lt;p&gt;Impossible de communiquer avec le serveur : ${error.message}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;                document.getElementById('result').style.display = 'block';&#10;            });&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>