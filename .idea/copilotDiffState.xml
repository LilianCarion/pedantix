<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.env.prod">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.env.prod" />
              <option name="originalContent" value="# Configuration pour la production&#10;APP_ENV=prod&#10;APP_SECRET=CHANGEZ_CETTE_CLE_SECRETE_EN_PRODUCTION&#10;APP_DEBUG=0&#10;&#10;# Base de données - À adapter selon votre serveur OVH&#10;DATABASE_URL=&quot;mysql://username:password@localhost:3306/pedantix_prod?serverVersion=8.0&amp;charset=utf8mb4&quot;&#10;&#10;# Configuration serveur&#10;TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16&#10;TRUSTED_HOSTS='^(localhost|127\.0\.0\.1|yourdomainname\.com)$'&#10;&#10;# Optimisations&#10;OPCACHE_PRELOAD=var/cache/prod/App_KernelProdContainer.preload.php&#10;" />
              <option name="updatedContent" value="# Configuration pour la production OVH&#10;APP_ENV=prod&#10;APP_SECRET=a9f2c8e1b5d7h3k6m9p2q8r4t7w1x5z8y2b6c9e3f7j4n8s1v5y9a2d6g3k7m1p4&#10;APP_DEBUG=0&#10;&#10;# Base de données OVH&#10;DATABASE_URL=&quot;mysql://analanjroot:Bulls071201@analanjroot.mysql.db:3306/analanjroot?serverVersion=8.0&amp;charset=utf8mb4&quot;&#10;&#10;# Configuration serveur&#10;TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16&#10;TRUSTED_HOSTS='^(localhost|127\.0\.0\.1|analantix\.ovh)$'&#10;&#10;# Optimisations production&#10;OPCACHE_PRELOAD=var/cache/prod/App_KernelProdContainer.preload.php" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/README_DEPLOY_OVH.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README_DEPLOY_OVH.md" />
              <option name="updatedContent" value="#  Déploiement Pedantix OVH - Configuration automatique&#10;&#10;## Configuration intégrée&#10;Vos paramètres OVH sont maintenant directement intégrés dans le projet :&#10;- **Base de données :** analanjroot&#10;- **Host :** analanjroot.mysql.db&#10;- **Utilisateur :** analanjroot&#10;- **Mot de passe :** Bulls071201&#10;- **Domaine :** analantix.ovh&#10;&#10;##  Déploiement en 2 étapes seulement&#10;&#10;### Méthode 1 : Via interface web (recommandée)&#10;1. **Uploadez tout** le contenu de votre repo dans `www/` sur OVH&#10;2. **Ouvrez** dans votre navigateur : `http://analantix.ovh/deploy.php`&#10;3. **Cliquez** sur &quot;Démarrer le déploiement automatique&quot;&#10;4. **Supprimez** `deploy.php` après succès&#10;&#10;### Méthode 2 : Via SSH (si disponible)&#10;1. **Uploadez tout** le contenu dans `www/`&#10;2. **Exécutez** : `bash deploy_ovh.sh`&#10;3. **Supprimez** le script après succès&#10;&#10;##  Ce qui sera fait automatiquement&#10;- ✅ Configuration .env avec vos paramètres OVH&#10;- ✅ Installation de Composer et dépendances&#10;- ✅ Création de la base de données&#10;- ✅ Exécution des migrations&#10;- ✅ Peuplement avec 150+ articles Wikipedia&#10;- ✅ Configuration des permissions&#10;- ✅ Tests de bon fonctionnement&#10;&#10;## ⚠️ Configuration serveur web&#10;**IMPORTANT :** Configurez votre serveur web OVH pour que le nom de domaine `analantix.ovh` pointe vers le dossier `public/` (pas vers la racine `www/`).&#10;&#10;Dans votre panel OVH :&#10;1. Allez dans &quot;Multisite&quot;&#10;2. Modifiez `analantix.ovh`&#10;3. Changez le dossier racine vers `public/`&#10;&#10;##  Résultat final&#10;Votre Pedantix sera accessible sur `http://analantix.ovh` avec :&#10;- Plus de 150 articles Wikipedia pré-chargés&#10;- Modes Compétition et Coopération&#10;- Système de nouvelles parties automatiques&#10;- Interface responsive et moderne&#10;&#10;##  En cas de problème&#10;Si le déploiement échoue :&#10;1. Vérifiez que PHP 8.1+ est activé sur votre hébergement&#10;2. Vérifiez que l'extension MySQL est activée&#10;3. Consultez les logs d'erreur dans le panel OVH&#10;4. Assurez-vous que le domaine pointe vers `public/`&#10;&#10;Votre configuration est maintenant entièrement automatisée !" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/deploy.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/deploy.php" />
              <option name="updatedContent" value="&lt;?php&#10;/**&#10; * Script de déploiement web automatique pour OVH&#10; * À exécuter UNE SEULE FOIS après upload via navigateur web&#10; * URL: http://analantix.ovh/deploy.php&#10; */&#10;&#10;// Configuration OVH pré-remplie&#10;$ovh_config = [&#10;    'db_host' =&gt; 'analanjroot.mysql.db',&#10;    'db_name' =&gt; 'analanjroot',&#10;    'db_user' =&gt; 'analanjroot',&#10;    'db_pass' =&gt; 'Bulls071201',&#10;    'domain' =&gt; 'analantix.ovh',&#10;    'app_secret' =&gt; 'a9f2c8e1b5d7h3k6m9p2q8r4t7w1x5z8y2b6c9e3f7j4n8s1v5y9a2d6g3k7m1p4'&#10;];&#10;&#10;// Vérifier que nous sommes bien sur le serveur&#10;$isLocal = in_array($_SERVER['HTTP_HOST'], ['localhost', '127.0.0.1']) || &#10;           strpos($_SERVER['HTTP_HOST'], 'localhost:') === 0;&#10;&#10;if ($isLocal) {&#10;    die('⚠️ Ce script est destiné au serveur de production seulement.');&#10;}&#10;&#10;// Traitement automatique&#10;if ($_SERVER['REQUEST_METHOD'] === 'POST' || isset($_GET['auto'])) {&#10;    header('Content-Type: application/json; charset=utf-8');&#10;    &#10;    $steps = [];&#10;    $allSuccess = true;&#10;    &#10;    try {&#10;        // Étape 1: Créer le fichier .env automatiquement&#10;        $steps[] = ['step' =&gt; 1, 'description' =&gt; 'Configuration automatique .env'];&#10;        &#10;        $envContent = &quot;# Configuration générée automatiquement pour OVH\n&quot;;&#10;        $envContent .= &quot;APP_ENV=prod\n&quot;;&#10;        $envContent .= &quot;APP_SECRET=&quot; . $ovh_config['app_secret'] . &quot;\n&quot;;&#10;        $envContent .= &quot;APP_DEBUG=0\n\n&quot;;&#10;        $envContent .= &quot;# Base de données OVH\n&quot;;&#10;        $envContent .= &quot;DATABASE_URL=\&quot;mysql://{$ovh_config['db_user']}:{$ovh_config['db_pass']}@{$ovh_config['db_host']}:3306/{$ovh_config['db_name']}?serverVersion=8.0&amp;charset=utf8mb4\&quot;\n\n&quot;;&#10;        $envContent .= &quot;# Configuration serveur\n&quot;;&#10;        $envContent .= &quot;TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16\n&quot;;&#10;        $envContent .= &quot;TRUSTED_HOSTS='^(localhost|127\\.0\\.0\\.1|&quot; . preg_quote($ovh_config['domain'], '/') . &quot;)$'\n&quot;;&#10;        &#10;        if (file_put_contents('.env', $envContent) === false) {&#10;            throw new Exception('Impossible de créer le fichier .env');&#10;        }&#10;        $steps[0]['success'] = true;&#10;        &#10;        // Étape 2: Installer Composer&#10;        $steps[] = ['step' =&gt; 2, 'description' =&gt; 'Installation de Composer'];&#10;        &#10;        if (!file_exists('composer.phar')) {&#10;            $composerContent = file_get_contents('https://getcomposer.org/composer.phar');&#10;            if ($composerContent === false) {&#10;                throw new Exception('Impossible de télécharger Composer');&#10;            }&#10;            file_put_contents('composer.phar', $composerContent);&#10;            chmod('composer.phar', 0755);&#10;        }&#10;        $steps[1]['success'] = true;&#10;        &#10;        // Étape 3: Installer les dépendances&#10;        $steps[] = ['step' =&gt; 3, 'description' =&gt; 'Installation des dépendances PHP'];&#10;        &#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec('php composer.phar install --no-dev --optimize-autoloader --no-interaction 2&gt;&amp;1', $output, $returnCode);&#10;        $steps[2]['success'] = $returnCode === 0;&#10;        $steps[2]['output'] = implode(&quot;\n&quot;, $output);&#10;        &#10;        if (!$steps[2]['success']) {&#10;            throw new Exception('Échec de l\'installation des dépendances');&#10;        }&#10;        &#10;        // Étape 4: Déploiement complet&#10;        $steps[] = ['step' =&gt; 4, 'description' =&gt; 'Déploiement complet (cache, DB, articles)'];&#10;        &#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec('php bin/console app:deploy prod 2&gt;&amp;1', $output, $returnCode);&#10;        $steps[3]['success'] = $returnCode === 0;&#10;        $steps[3]['output'] = implode(&quot;\n&quot;, $output);&#10;        &#10;        if (!$steps[3]['success']) {&#10;            throw new Exception('Échec du déploiement');&#10;        }&#10;        &#10;        // Étape 5: Configuration des permissions&#10;        $steps[] = ['step' =&gt; 5, 'description' =&gt; 'Configuration des permissions'];&#10;        &#10;        if (is_dir('var/cache')) chmod('var/cache', 0775);&#10;        if (is_dir('var/log')) chmod('var/log', 0775);&#10;        $steps[4]['success'] = true;&#10;        &#10;        // Étape 6: Test final et comptage des articles&#10;        $steps[] = ['step' =&gt; 6, 'description' =&gt; 'Vérification finale'];&#10;        &#10;        $output = [];&#10;        $returnCode = 0;&#10;        exec('php bin/console debug:container --env=prod 2&gt;&amp;1', $output, $returnCode);&#10;        $steps[5]['success'] = $returnCode === 0;&#10;        &#10;        // Compter les articles&#10;        $articleCount = 0;&#10;        try {&#10;            $output = [];&#10;            exec(&quot;php bin/console doctrine:query:sql 'SELECT COUNT(*) as count FROM wikipedia_article' --quiet 2&gt;&amp;1&quot;, $output, $returnCode);&#10;            if ($returnCode === 0 &amp;&amp; !empty($output)) {&#10;                foreach ($output as $line) {&#10;                    if (preg_match('/(\d+)/', $line, $matches)) {&#10;                        $articleCount = (int)$matches[1];&#10;                        break;&#10;                    }&#10;                }&#10;            }&#10;        } catch (Exception $e) {&#10;            // Ignorer les erreurs de comptage&#10;        }&#10;        &#10;        if (!$steps[5]['success']) {&#10;            throw new Exception('Test final échoué');&#10;        }&#10;        &#10;        echo json_encode([&#10;            'success' =&gt; true,&#10;            'message' =&gt; 'Déploiement réussi !',&#10;            'data' =&gt; [&#10;                'steps' =&gt; $steps,&#10;                'article_count' =&gt; $articleCount,&#10;                'domain' =&gt; $ovh_config['domain'],&#10;                'next_steps' =&gt; [&#10;                    'Votre Pedantix est maintenant opérationnel !',&#10;                    'Configurez votre serveur web pour pointer vers public/',&#10;                    'Supprimez ce fichier deploy.php pour la sécurité',&#10;                    'Accédez à votre site via: http://' . $ovh_config['domain'],&#10;                    &quot;Articles Wikipedia en base: $articleCount&quot;&#10;                ]&#10;            ]&#10;        ], JSON_UNESCAPED_UNICODE);&#10;        &#10;    } catch (Exception $e) {&#10;        echo json_encode([&#10;            'success' =&gt; false,&#10;            'message' =&gt; 'Erreur lors du déploiement: ' . $e-&gt;getMessage(),&#10;            'data' =&gt; ['steps' =&gt; $steps]&#10;        ], JSON_UNESCAPED_UNICODE);&#10;    }&#10;    exit;&#10;}&#10;&#10;// Interface HTML&#10;?&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Déploiement Pedantix OVH&lt;/title&gt;&#10;    &lt;style&gt;&#10;        body {&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            max-width: 800px;&#10;            margin: 0 auto;&#10;            padding: 20px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            min-height: 100vh;&#10;        }&#10;        &#10;        .container {&#10;            background: white;&#10;            padding: 30px;&#10;            border-radius: 15px;&#10;            box-shadow: 0 10px 30px rgba(0,0,0,0.2);&#10;        }&#10;        &#10;        h1 { color: #333; text-align: center; margin-bottom: 30px; }&#10;        &#10;        .config-display {&#10;            background: #f8f9fa;&#10;            padding: 20px;&#10;            border-radius: 8px;&#10;            margin: 20px 0;&#10;        }&#10;        &#10;        .btn {&#10;            background: linear-gradient(45deg, #667eea, #764ba2);&#10;            color: white;&#10;            padding: 15px 30px;&#10;            border: none;&#10;            border-radius: 8px;&#10;            font-size: 16px;&#10;            font-weight: bold;&#10;            cursor: pointer;&#10;            width: 100%;&#10;            margin-top: 20px;&#10;        }&#10;        &#10;        .btn:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;        &#10;        .step {&#10;            padding: 10px;&#10;            margin: 5px 0;&#10;            border-radius: 5px;&#10;            border-left: 4px solid #ccc;&#10;        }&#10;        &#10;        .step.success {&#10;            background: #d4edda;&#10;            border-left-color: #28a745;&#10;        }&#10;        &#10;        .step.error {&#10;            background: #f8d7da;&#10;            border-left-color: #dc3545;&#10;        }&#10;        &#10;        .alert {&#10;            padding: 15px;&#10;            margin: 20px 0;&#10;            border-radius: 5px;&#10;        }&#10;        &#10;        .alert-success {&#10;            background: #d4edda;&#10;            color: #155724;&#10;            border: 1px solid #c3e6cb;&#10;        }&#10;        &#10;        .alert-danger {&#10;            background: #f8d7da;&#10;            color: #721c24;&#10;            border: 1px solid #f5c6cb;&#10;        }&#10;        &#10;        #progress { display: none; margin-top: 20px; }&#10;        #result { display: none; }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h1&gt; Déploiement Pedantix OVH&lt;/h1&gt;&#10;        &#10;        &lt;div id=&quot;form-section&quot;&gt;&#10;            &lt;p&gt;&lt;strong&gt;Configuration automatique détectée :&lt;/strong&gt;&lt;/p&gt;&#10;            &#10;            &lt;div class=&quot;config-display&quot;&gt;&#10;                &lt;h4&gt; Paramètres OVH configurés :&lt;/h4&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Base de données :&lt;/strong&gt; &lt;?php echo $ovh_config['db_name']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Host :&lt;/strong&gt; &lt;?php echo $ovh_config['db_host']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Utilisateur :&lt;/strong&gt; &lt;?php echo $ovh_config['db_user']; ?&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;strong&gt;Domaine :&lt;/strong&gt; &lt;?php echo $ovh_config['domain']; ?&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;p&gt;Cliquez sur le bouton ci-dessous pour démarrer le déploiement automatique. Toute la configuration est déjà prête !&lt;/p&gt;&#10;            &#10;            &lt;button onclick=&quot;startDeployment()&quot; class=&quot;btn&quot; id=&quot;deployBtn&quot;&gt;&#10;                 Démarrer le déploiement automatique&#10;            &lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div id=&quot;progress&quot;&gt;&#10;            &lt;h3&gt;Déploiement en cours...&lt;/h3&gt;&#10;            &lt;div id=&quot;steps&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div id=&quot;result&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script&gt;&#10;        function startDeployment() {&#10;            document.getElementById('form-section').style.display = 'none';&#10;            document.getElementById('progress').style.display = 'block';&#10;            &#10;            const stepsContainer = document.getElementById('steps');&#10;            &#10;            fetch(window.location.href + '?auto=1', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                }&#10;            })&#10;            .then(response =&gt; response.json())&#10;            .then(result =&gt; {&#10;                if (result.success) {&#10;                    // Afficher les étapes réussies&#10;                    if (result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre style=&quot;font-size: 12px; margin-top: 10px;&quot;&gt;' + step.output.substring(0, 500) + (step.output.length &gt; 500 ? '...' : '') + '&lt;/pre&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;                    &#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-success&quot;&gt;&#10;                            &lt;h3&gt;✅ Déploiement réussi !&lt;/h3&gt;&#10;                            &lt;p&gt;&lt;strong&gt;Articles en base :&lt;/strong&gt; ${result.data.article_count || 0}&lt;/p&gt;&#10;                            &lt;p&gt;&lt;strong&gt;URL :&lt;/strong&gt; &lt;a href=&quot;http://${result.data.domain}&quot; target=&quot;_blank&quot;&gt;http://${result.data.domain}&lt;/a&gt;&lt;/p&gt;&#10;                            &lt;h4&gt;Prochaines étapes :&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                ${result.data.next_steps.map(step =&gt; '&lt;li&gt;' + step + '&lt;/li&gt;').join('')}&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                } else {&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                            &lt;h3&gt;❌ Erreur de déploiement&lt;/h3&gt;&#10;                            &lt;p&gt;${result.message}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                    &#10;                    if (result.data &amp;&amp; result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre style=&quot;font-size: 12px;&quot;&gt;' + step.output + '&lt;/pre&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;                }&#10;                &#10;                document.getElementById('result').style.display = 'block';&#10;                &#10;            })&#10;            .catch(error =&gt; {&#10;                document.getElementById('result').innerHTML = `&#10;                    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                        &lt;h3&gt;❌ Erreur de connexion&lt;/h3&gt;&#10;                        &lt;p&gt;Impossible de communiquer avec le serveur : ${error.message}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;                document.getElementById('result').style.display = 'block';&#10;            });&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/deploy_ovh.sh">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/deploy_ovh.sh" />
              <option name="updatedContent" value="#!/bin/bash&#10;&#10;#  Script de déploiement automatique Pedantix OVH&#10;# Exécute ce script UNE SEULE FOIS après avoir pullé le repo&#10;&#10;echo &quot; Déploiement automatique Pedantix sur OVH&quot;&#10;echo &quot;=============================================&quot;&#10;&#10;# Couleurs&#10;GREEN='\033[0;32m'&#10;YELLOW='\033[1;33m'&#10;RED='\033[0;31m'&#10;NC='\033[0m'&#10;&#10;log_info() { echo -e &quot;${GREEN}[INFO]${NC} $1&quot;; }&#10;log_warning() { echo -e &quot;${YELLOW}[WARNING]${NC} $1&quot;; }&#10;log_error() { echo -e &quot;${RED}[ERROR]${NC} $1&quot;; }&#10;&#10;# Vérifier l'environnement&#10;log_info &quot;1. Vérification de l'environnement...&quot;&#10;if ! command -v php &amp;&gt; /dev/null; then&#10;    log_error &quot;PHP n'est pas disponible. Vérifiez votre configuration OVH.&quot;&#10;    exit 1&#10;fi&#10;&#10;PHP_VERSION=$(php -v | head -n 1 | cut -d ' ' -f 2 | cut -d '.' -f 1,2)&#10;log_info &quot;Version PHP: $PHP_VERSION&quot;&#10;&#10;if [[ &quot;$PHP_VERSION&quot; &lt; &quot;8.1&quot; ]]; then&#10;    log_warning &quot;PHP 8.1+ recommandé. Version actuelle: $PHP_VERSION&quot;&#10;fi&#10;&#10;# Configuration automatique .env&#10;log_info &quot;2. Configuration automatique...&quot;&#10;if [ ! -f .env ]; then&#10;    cp .env.prod .env&#10;    log_info &quot;Fichier .env configuré automatiquement avec vos paramètres OVH&quot;&#10;else&#10;    log_warning &quot;Fichier .env existe déjà - préservation de la configuration existante&quot;&#10;fi&#10;&#10;# Installation Composer si nécessaire&#10;log_info &quot;3. Installation de Composer...&quot;&#10;if [ ! -f composer.phar ]; then&#10;    log_info &quot;Téléchargement de Composer...&quot;&#10;    curl -sS https://getcomposer.org/installer | php&#10;    if [ $? -ne 0 ]; then&#10;        log_error &quot;Échec du téléchargement de Composer&quot;&#10;        exit 1&#10;    fi&#10;fi&#10;&#10;# Installation des dépendances&#10;log_info &quot;4. Installation des dépendances...&quot;&#10;php composer.phar install --no-dev --optimize-autoloader --no-interaction&#10;if [ $? -ne 0 ]; then&#10;    log_error &quot;Échec de l'installation des dépendances&quot;&#10;    exit 1&#10;fi&#10;&#10;# Déploiement complet&#10;log_info &quot;5. Déploiement complet (migrations + articles Wikipedia)...&quot;&#10;php bin/console app:deploy prod&#10;if [ $? -ne 0 ]; then&#10;    log_error &quot;Échec du déploiement&quot;&#10;    exit 1&#10;fi&#10;&#10;# Configuration des permissions&#10;log_info &quot;6. Configuration des permissions...&quot;&#10;chmod -R 755 var/cache var/log 2&gt;/dev/null || true&#10;&#10;# Test de connexion à la base&#10;log_info &quot;7. Test de la base de données...&quot;&#10;php bin/console doctrine:schema:validate --no-interaction &gt;/dev/null 2&gt;&amp;1&#10;if [ $? -eq 0 ]; then&#10;    log_info &quot;✅ Connexion à la base de données OK&quot;&#10;else&#10;    log_warning &quot;⚠️ Problème potentiel avec la base de données&quot;&#10;fi&#10;&#10;# Compter les articles&#10;ARTICLE_COUNT=$(php bin/console doctrine:query:sql 'SELECT COUNT(*) as count FROM wikipedia_article' --quiet 2&gt;/dev/null | tail -n 1 | awk '{print $1}' || echo &quot;?&quot;)&#10;&#10;log_info &quot;8. Vérification finale...&quot;&#10;php bin/console debug:container --env=prod &gt;/dev/null 2&gt;&amp;1&#10;if [ $? -eq 0 ]; then&#10;    echo &quot;&quot;&#10;    echo &quot; DÉPLOIEMENT RÉUSSI !&quot;&#10;    echo &quot;=======================&quot;&#10;    echo &quot; Statistiques :&quot;&#10;    echo &quot;   - Articles Wikipedia : $ARTICLE_COUNT&quot;&#10;    echo &quot;   - URL : http://analantix.ovh&quot;&#10;    echo &quot;   - Base de données : analanjroot&quot;&#10;    echo &quot;&quot;&#10;    echo &quot; Votre Pedantix est opérationnel !&quot;&#10;    echo &quot;   - Plus de 150 articles Wikipedia disponibles&quot;&#10;    echo &quot;   - Modes Compétition et Coopération&quot;&#10;    echo &quot;   - Nouvelles parties automatiques&quot;&#10;    echo &quot;&quot;&#10;    echo &quot;⚠️ IMPORTANT :&quot;&#10;    echo &quot;   - Configurez votre serveur web pour pointer vers public/&quot;&#10;    echo &quot;   - Activez HTTPS si possible&quot;&#10;    echo &quot;   - Supprimez ce script après le premier déploiement&quot;&#10;else&#10;    log_error &quot;Erreur lors de la vérification finale&quot;&#10;    exit 1&#10;fi" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/public/.htaccess">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/public/.htaccess" />
              <option name="updatedContent" value="# Configuration Apache pour Pedantix&#10;DirectoryIndex index.php&#10;&#10;&lt;IfModule mod_negotiation.c&gt;&#10;    Options -MultiViews&#10;&lt;/IfModule&gt;&#10;&#10;&lt;IfModule mod_rewrite.c&gt;&#10;    RewriteEngine On&#10;&#10;    # Détection du répertoire de base&#10;    RewriteCond %{REQUEST_URI}::$0 ^(/.+)/(.*)::\2$&#10;    RewriteRule .* - [E=BASE:%1]&#10;&#10;    # Redirection vers index.php pour toutes les routes Symfony&#10;    RewriteCond %{REQUEST_FILENAME} !-f&#10;    RewriteRule ^(.*)$ index.php [QSA,L]&#10;&lt;/IfModule&gt;&#10;&#10;# Sécurité - Bloquer l'accès aux fichiers cachés&#10;&lt;Files ~ &quot;^\.&quot;&gt;&#10;    Order allow,deny&#10;    Deny from all&#10;&lt;/Files&gt;&#10;&#10;# Bloquer l'accès aux fichiers sensibles&#10;&lt;FilesMatch &quot;\.(env|lock|json|md|sh|php~|bak)$&quot;&gt;&#10;    Order allow,deny&#10;    Deny from all&#10;&lt;/FilesMatch&gt;&#10;&#10;# Cache des assets statiques&#10;&lt;IfModule mod_expires.c&gt;&#10;    ExpiresActive On&#10;    ExpiresByType text/css &quot;access plus 1 month&quot;&#10;    ExpiresByType application/javascript &quot;access plus 1 month&quot;&#10;    ExpiresByType image/png &quot;access plus 6 months&quot;&#10;    ExpiresByType image/jpg &quot;access plus 6 months&quot;&#10;    ExpiresByType image/jpeg &quot;access plus 6 months&quot;&#10;    ExpiresByType image/gif &quot;access plus 6 months&quot;&#10;    ExpiresByType image/svg+xml &quot;access plus 6 months&quot;&#10;    ExpiresByType font/woff &quot;access plus 1 year&quot;&#10;    ExpiresByType font/woff2 &quot;access plus 1 year&quot;&#10;&lt;/IfModule&gt;&#10;&#10;# Compression GZIP&#10;&lt;IfModule mod_deflate.c&gt;&#10;    AddOutputFilterByType DEFLATE text/plain&#10;    AddOutputFilterByType DEFLATE text/html&#10;    AddOutputFilterByType DEFLATE text/xml&#10;    AddOutputFilterByType DEFLATE text/css&#10;    AddOutputFilterByType DEFLATE text/javascript&#10;    AddOutputFilterByType DEFLATE application/xml&#10;    AddOutputFilterByType DEFLATE application/xhtml+xml&#10;    AddOutputFilterByType DEFLATE application/rss+xml&#10;    AddOutputFilterByType DEFLATE application/javascript&#10;    AddOutputFilterByType DEFLATE application/x-javascript&#10;    AddOutputFilterByType DEFLATE application/json&#10;&lt;/IfModule&gt;&#10;&#10;# Sécurité supplémentaire&#10;&lt;IfModule mod_headers.c&gt;&#10;    Header always set X-Content-Type-Options nosniff&#10;    Header always set X-Frame-Options DENY&#10;    Header always set X-XSS-Protection &quot;1; mode=block&quot;&#10;    Header always set Referrer-Policy &quot;strict-origin-when-cross-origin&quot;&#10;&lt;/IfModule&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/web_deploy.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/web_deploy.php" />
              <option name="updatedContent" value="&lt;?php&#10;/**&#10; * Interface de déploiement web pour Pedantix&#10; * À utiliser quand SSH n'est pas disponible sur le serveur OVH&#10; */&#10;&#10;// Configuration de sécurité&#10;ini_set('display_errors', 1);&#10;error_reporting(E_ALL);&#10;&#10;// Vérifier que nous sommes bien sur le serveur (pas en local)&#10;$isLocal = in_array($_SERVER['HTTP_HOST'], ['localhost', '127.0.0.1']) || &#10;           strpos($_SERVER['HTTP_HOST'], 'localhost:') === 0;&#10;&#10;if ($isLocal) {&#10;    die('⚠️ Ce script est destiné au serveur de production seulement.');&#10;}&#10;&#10;// Header pour JSON&#10;header('Content-Type: application/json; charset=utf-8');&#10;&#10;// Fonction pour retourner une réponse JSON&#10;function jsonResponse($success, $message, $data = []) {&#10;    echo json_encode([&#10;        'success' =&gt; $success,&#10;        'message' =&gt; $message,&#10;        'data' =&gt; $data&#10;    ], JSON_UNESCAPED_UNICODE);&#10;    exit;&#10;}&#10;&#10;// Fonction pour exécuter des commandes et capturer le résultat&#10;function executeCommand($command, $description = '') {&#10;    $output = [];&#10;    $returnCode = 0;&#10;    &#10;    exec($command . ' 2&gt;&amp;1', $output, $returnCode);&#10;    &#10;    return [&#10;        'success' =&gt; $returnCode === 0,&#10;        'output' =&gt; implode(&quot;\n&quot;, $output),&#10;        'command' =&gt; $command,&#10;        'description' =&gt; $description&#10;    ];&#10;}&#10;&#10;// Traitement POST pour le déploiement&#10;if ($_SERVER['REQUEST_METHOD'] === 'POST') {&#10;    // Lire les données JSON envoyées&#10;    $input = file_get_contents('php://input');&#10;    &#10;    if (empty($input)) {&#10;        jsonResponse(false, 'Aucune donnée reçue');&#10;    }&#10;    &#10;    $data = json_decode($input, true);&#10;    &#10;    if (json_last_error() !== JSON_ERROR_NONE) {&#10;        jsonResponse(false, 'Données JSON invalides: ' . json_last_error_msg());&#10;    }&#10;    &#10;    // Valider les données requises&#10;    $required = ['db_host', 'db_name', 'db_user', 'db_pass', 'app_secret', 'domain'];&#10;    foreach ($required as $field) {&#10;        if (empty($data[$field])) {&#10;            jsonResponse(false, &quot;Le champ '$field' est requis&quot;);&#10;        }&#10;    }&#10;    &#10;    $steps = [];&#10;    $allSuccess = true;&#10;    &#10;    try {&#10;        // Étape 1: Créer le fichier .env&#10;        $steps[] = ['step' =&gt; 1, 'description' =&gt; 'Configuration du fichier .env'];&#10;        &#10;        $envContent = &quot;# Configuration générée automatiquement\n&quot;;&#10;        $envContent .= &quot;APP_ENV=prod\n&quot;;&#10;        $envContent .= &quot;APP_SECRET=&quot; . $data['app_secret'] . &quot;\n&quot;;&#10;        $envContent .= &quot;APP_DEBUG=0\n\n&quot;;&#10;        $envContent .= &quot;# Base de données\n&quot;;&#10;        $envContent .= &quot;DATABASE_URL=\&quot;mysql://{$data['db_user']}:{$data['db_pass']}@{$data['db_host']}:3306/{$data['db_name']}?serverVersion=8.0&amp;charset=utf8mb4\&quot;\n\n&quot;;&#10;        $envContent .= &quot;# Configuration serveur\n&quot;;&#10;        $envContent .= &quot;TRUSTED_PROXIES=127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16\n&quot;;&#10;        $envContent .= &quot;TRUSTED_HOSTS='^(localhost|127\\.0\\.0\\.1|&quot; . preg_quote($data['domain'], '/') . &quot;)$'\n&quot;;&#10;        &#10;        if (file_put_contents('.env', $envContent) === false) {&#10;            throw new Exception('Impossible de créer le fichier .env');&#10;        }&#10;        &#10;        $steps[0]['success'] = true;&#10;        &#10;        // Étape 2: Vérifier/installer Composer&#10;        $steps[] = ['step' =&gt; 2, 'description' =&gt; 'Installation de Composer'];&#10;        &#10;        if (!file_exists('composer.phar')) {&#10;            $composerUrl = 'https://getcomposer.org/composer.phar';&#10;            $composerContent = file_get_contents($composerUrl);&#10;            if ($composerContent === false) {&#10;                throw new Exception('Impossible de télécharger Composer');&#10;            }&#10;            file_put_contents('composer.phar', $composerContent);&#10;            chmod('composer.phar', 0755);&#10;        }&#10;        &#10;        $steps[1]['success'] = true;&#10;        &#10;        // Étape 3: Installer les dépendances&#10;        $steps[] = ['step' =&gt; 3, 'description' =&gt; 'Installation des dépendances PHP'];&#10;        &#10;        $result = executeCommand('php composer.phar install --no-dev --optimize-autoloader --no-interaction');&#10;        $steps[2]['success'] = $result['success'];&#10;        $steps[2]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Échec de l\'installation des dépendances: ' . $result['output']);&#10;        }&#10;        &#10;        // Étape 4: Nettoyer le cache&#10;        $steps[] = ['step' =&gt; 4, 'description' =&gt; 'Nettoyage du cache'];&#10;        &#10;        $result = executeCommand('php bin/console cache:clear --env=prod --no-debug');&#10;        $steps[3]['success'] = $result['success'];&#10;        $steps[3]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Échec du nettoyage du cache: ' . $result['output']);&#10;        }&#10;        &#10;        // Étape 5: Créer la base de données&#10;        $steps[] = ['step' =&gt; 5, 'description' =&gt; 'Création de la base de données'];&#10;        &#10;        $result = executeCommand('php bin/console doctrine:database:create --if-not-exists --no-interaction');&#10;        $steps[4]['success'] = $result['success'];&#10;        $steps[4]['output'] = $result['output'];&#10;        &#10;        // Continuer même si la base existe déjà&#10;        &#10;        // Étape 6: Migrations&#10;        $steps[] = ['step' =&gt; 6, 'description' =&gt; 'Exécution des migrations'];&#10;        &#10;        $result = executeCommand('php bin/console doctrine:migrations:migrate --no-interaction');&#10;        $steps[5]['success'] = $result['success'];&#10;        $steps[5]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Échec des migrations: ' . $result['output']);&#10;        }&#10;        &#10;        // Étape 7: Peupler avec les articles Wikipedia&#10;        $steps[] = ['step' =&gt; 7, 'description' =&gt; 'Peuplement des articles Wikipedia'];&#10;        &#10;        $result = executeCommand('php bin/console app:seed-wikipedia-articles');&#10;        $steps[6]['success'] = $result['success'];&#10;        $steps[6]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            // Continuer même si ça échoue, les articles peuvent être ajoutés manuellement&#10;            $steps[6]['warning'] = 'Articles non chargés automatiquement - ils seront ajoutés lors de la première utilisation';&#10;        }&#10;        &#10;        // Étape 8: Configuration des permissions&#10;        $steps[] = ['step' =&gt; 8, 'description' =&gt; 'Configuration des permissions'];&#10;        &#10;        if (is_dir('var/cache')) {&#10;            chmod('var/cache', 0775);&#10;        }&#10;        if (is_dir('var/log')) {&#10;            chmod('var/log', 0775);&#10;        }&#10;        &#10;        $steps[7]['success'] = true;&#10;        &#10;        // Étape 9: Test final&#10;        $steps[] = ['step' =&gt; 9, 'description' =&gt; 'Test de l\'installation'];&#10;        &#10;        $result = executeCommand('php bin/console debug:container --env=prod');&#10;        $steps[8]['success'] = $result['success'];&#10;        $steps[8]['output'] = $result['output'];&#10;        &#10;        if (!$result['success']) {&#10;            throw new Exception('Test final échoué: ' . $result['output']);&#10;        }&#10;        &#10;        // Compter les articles en base&#10;        $articleCount = 0;&#10;        try {&#10;            $result = executeCommand(&quot;php bin/console doctrine:query:sql 'SELECT COUNT(*) as count FROM wikipedia_article' --quiet&quot;);&#10;            if ($result['success']) {&#10;                preg_match('/(\d+)/', $result['output'], $matches);&#10;                $articleCount = isset($matches[1]) ? (int)$matches[1] : 0;&#10;            }&#10;        } catch (Exception $e) {&#10;            // Ignorer les erreurs de comptage&#10;        }&#10;        &#10;        jsonResponse(true, 'Déploiement réussi !', [&#10;            'steps' =&gt; $steps,&#10;            'article_count' =&gt; $articleCount,&#10;            'next_steps' =&gt; [&#10;                'Votre Pedantix est maintenant opérationnel !',&#10;                'Supprimez ce fichier web_deploy.php pour la sécurité',&#10;                'Accédez à votre site via: https://' . $data['domain'],&#10;                &quot;Articles Wikipedia en base: $articleCount&quot;&#10;            ]&#10;        ]);&#10;        &#10;    } catch (Exception $e) {&#10;        $allSuccess = false;&#10;        jsonResponse(false, 'Erreur lors du déploiement: ' . $e-&gt;getMessage(), [&#10;            'steps' =&gt; $steps,&#10;            'error_details' =&gt; $e-&gt;getTraceAsString()&#10;        ]);&#10;    }&#10;}&#10;&#10;// Interface HTML pour la configuration&#10;?&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;fr&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Déploiement Pedantix&lt;/title&gt;&#10;    &lt;style&gt;&#10;        body {&#10;            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;            max-width: 800px;&#10;            margin: 0 auto;&#10;            padding: 20px;&#10;            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;            min-height: 100vh;&#10;        }&#10;        &#10;        .container {&#10;            background: white;&#10;            padding: 30px;&#10;            border-radius: 15px;&#10;            box-shadow: 0 10px 30px rgba(0,0,0,0.2);&#10;        }&#10;        &#10;        h1 {&#10;            color: #333;&#10;            text-align: center;&#10;            margin-bottom: 30px;&#10;        }&#10;        &#10;        .form-group {&#10;            margin-bottom: 20px;&#10;        }&#10;        &#10;        label {&#10;            display: block;&#10;            margin-bottom: 5px;&#10;            font-weight: bold;&#10;            color: #555;&#10;        }&#10;        &#10;        input[type=&quot;text&quot;], input[type=&quot;password&quot;] {&#10;            width: 100%;&#10;            padding: 12px;&#10;            border: 2px solid #e0e0e0;&#10;            border-radius: 8px;&#10;            font-size: 14px;&#10;            box-sizing: border-box;&#10;        }&#10;        &#10;        input:focus {&#10;            border-color: #667eea;&#10;            outline: none;&#10;        }&#10;        &#10;        .btn {&#10;            background: linear-gradient(45deg, #667eea, #764ba2);&#10;            color: white;&#10;            padding: 15px 30px;&#10;            border: none;&#10;            border-radius: 8px;&#10;            font-size: 16px;&#10;            font-weight: bold;&#10;            cursor: pointer;&#10;            width: 100%;&#10;            margin-top: 20px;&#10;        }&#10;        &#10;        .btn:hover {&#10;            transform: translateY(-2px);&#10;            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);&#10;        }&#10;        &#10;        .btn:disabled {&#10;            opacity: 0.7;&#10;            cursor: not-allowed;&#10;            transform: none;&#10;        }&#10;        &#10;        .progress {&#10;            display: none;&#10;            margin-top: 20px;&#10;        }&#10;        &#10;        .step {&#10;            padding: 10px;&#10;            margin: 5px 0;&#10;            border-radius: 5px;&#10;            border-left: 4px solid #ccc;&#10;        }&#10;        &#10;        .step.success {&#10;            background: #d4edda;&#10;            border-left-color: #28a745;&#10;        }&#10;        &#10;        .step.error {&#10;            background: #f8d7da;&#10;            border-left-color: #dc3545;&#10;        }&#10;        &#10;        .step.warning {&#10;            background: #fff3cd;&#10;            border-left-color: #ffc107;&#10;        }&#10;        &#10;        .step.running {&#10;            background: #d1ecf1;&#10;            border-left-color: #17a2b8;&#10;        }&#10;        &#10;        .help-text {&#10;            font-size: 12px;&#10;            color: #666;&#10;            margin-top: 5px;&#10;        }&#10;        &#10;        .alert {&#10;            padding: 15px;&#10;            margin: 20px 0;&#10;            border-radius: 5px;&#10;        }&#10;        &#10;        .alert-success {&#10;            background: #d4edda;&#10;            color: #155724;&#10;            border: 1px solid #c3e6cb;&#10;        }&#10;        &#10;        .alert-danger {&#10;            background: #f8d7da;&#10;            color: #721c24;&#10;            border: 1px solid #f5c6cb;&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h1&gt; Déploiement Pedantix&lt;/h1&gt;&#10;        &#10;        &lt;div id=&quot;form-section&quot;&gt;&#10;            &lt;p&gt;Configurez votre installation Pedantix avec vos paramètres de serveur OVH.&lt;/p&gt;&#10;            &#10;            &lt;form id=&quot;deployForm&quot;&gt;&#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;db_host&quot;&gt;Host de la base de données :&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;db_host&quot; name=&quot;db_host&quot; value=&quot;localhost&quot; required&gt;&#10;                    &lt;div class=&quot;help-text&quot;&gt;Généralement &quot;localhost&quot; pour OVH&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;db_name&quot;&gt;Nom de la base de données :&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;db_name&quot; name=&quot;db_name&quot; placeholder=&quot;votre_base_pedantix&quot; required&gt;&#10;                    &lt;div class=&quot;help-text&quot;&gt;Le nom de votre base MySQL créée dans le panel OVH&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;db_user&quot;&gt;Utilisateur de la base :&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;db_user&quot; name=&quot;db_user&quot; placeholder=&quot;votre_user_ovh&quot; required&gt;&#10;                    &lt;div class=&quot;help-text&quot;&gt;Votre nom d'utilisateur MySQL OVH&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;db_pass&quot;&gt;Mot de passe de la base :&lt;/label&gt;&#10;                    &lt;input type=&quot;password&quot; id=&quot;db_pass&quot; name=&quot;db_pass&quot; placeholder=&quot;votre_password_ovh&quot; required&gt;&#10;                    &lt;div class=&quot;help-text&quot;&gt;Votre mot de passe MySQL OVH&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;app_secret&quot;&gt;Clé secrète de l'application :&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;app_secret&quot; name=&quot;app_secret&quot; placeholder=&quot;Gén��rée automatiquement&quot; required&gt;&#10;                    &lt;div class=&quot;help-text&quot;&gt;Une clé secrète unique pour sécuriser votre application&lt;/div&gt;&#10;                    &lt;button type=&quot;button&quot; onclick=&quot;generateSecret()&quot; style=&quot;margin-top: 5px; padding: 5px 10px; font-size: 12px;&quot;&gt;Générer une clé&lt;/button&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;domain&quot;&gt;Votre nom de domaine :&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;domain&quot; name=&quot;domain&quot; placeholder=&quot;votre-domaine.com&quot; required&gt;&#10;                    &lt;div class=&quot;help-text&quot;&gt;Le nom de domaine de votre site (sans http://)&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;button type=&quot;submit&quot; class=&quot;btn&quot; id=&quot;deployBtn&quot;&gt;&#10;                     Démarrer le déploiement&#10;                &lt;/button&gt;&#10;            &lt;/form&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div id=&quot;progress&quot; class=&quot;progress&quot;&gt;&#10;            &lt;h3&gt;Déploiement en cours...&lt;/h3&gt;&#10;            &lt;div id=&quot;steps&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div id=&quot;result&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script&gt;&#10;        // Générer une clé secrète aléatoire&#10;        function generateSecret() {&#10;            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';&#10;            let secret = '';&#10;            for (let i = 0; i &lt; 32; i++) {&#10;                secret += chars.charAt(Math.floor(Math.random() * chars.length));&#10;            }&#10;            document.getElementById('app_secret').value = secret;&#10;        }&#10;        &#10;        // Générer automatiquement une clé au chargement&#10;        window.onload = function() {&#10;            generateSecret();&#10;        };&#10;        &#10;        // Gérer la soumission du formulaire&#10;        document.getElementById('deployForm').addEventListener('submit', async function(e) {&#10;            e.preventDefault();&#10;            &#10;            const formData = new FormData(this);&#10;            const data = Object.fromEntries(formData.entries());&#10;            &#10;            // Valider les données&#10;            for (const [key, value] of Object.entries(data)) {&#10;                if (!value.trim()) {&#10;                    alert('Veuillez remplir tous les champs');&#10;                    return;&#10;                }&#10;            }&#10;            &#10;            // Cacher le formulaire et montrer le progrès&#10;            document.getElementById('form-section').style.display = 'none';&#10;            document.getElementById('progress').style.display = 'block';&#10;            &#10;            const stepsContainer = document.getElementById('steps');&#10;            &#10;            try {&#10;                const response = await fetch(window.location.href, {&#10;                    method: 'POST',&#10;                    headers: {&#10;                        'Content-Type': 'application/json',&#10;                    },&#10;                    body: JSON.stringify(data)&#10;                });&#10;                &#10;                const result = await response.json();&#10;                &#10;                if (result.success) {&#10;                    // Afficher les étapes réussies&#10;                    if (result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : (step.warning ? 'warning' : 'error'));&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre&gt;' + step.output + '&lt;/pre&gt;' : ''}&#10;                                ${step.warning ? '&lt;div style=&quot;color: orange;&quot;&gt;⚠️ ' + step.warning + '&lt;/div&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;                    &#10;                    // Afficher le résultat final&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-success&quot;&gt;&#10;                            &lt;h3&gt;✅ Déploiement réussi !&lt;/h3&gt;&#10;                            &lt;p&gt;&lt;strong&gt;Articles en base :&lt;/strong&gt; ${result.data.article_count || 0}&lt;/p&gt;&#10;                            &lt;h4&gt;Prochaines étapes :&lt;/h4&gt;&#10;                            &lt;ul&gt;&#10;                                ${result.data.next_steps.map(step =&gt; '&lt;li&gt;' + step + '&lt;/li&gt;').join('')}&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                } else {&#10;                    // Afficher l'erreur&#10;                    document.getElementById('result').innerHTML = `&#10;                        &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                            &lt;h3&gt;❌ Erreur de déploiement&lt;/h3&gt;&#10;                            &lt;p&gt;${result.message}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    `;&#10;                    &#10;                    // Afficher les étapes partielles si disponibles&#10;                    if (result.data &amp;&amp; result.data.steps) {&#10;                        result.data.steps.forEach(step =&gt; {&#10;                            const stepDiv = document.createElement('div');&#10;                            stepDiv.className = 'step ' + (step.success ? 'success' : 'error');&#10;                            stepDiv.innerHTML = `&#10;                                &lt;strong&gt;Étape ${step.step}:&lt;/strong&gt; ${step.description}&#10;                                ${step.output ? '&lt;pre&gt;' + step.output + '&lt;/pre&gt;' : ''}&#10;                            `;&#10;                            stepsContainer.appendChild(stepDiv);&#10;                        });&#10;                    }&#10;                }&#10;                &#10;                document.getElementById('result').style.display = 'block';&#10;                &#10;            } catch (error) {&#10;                document.getElementById('result').innerHTML = `&#10;                    &lt;div class=&quot;alert alert-danger&quot;&gt;&#10;                        &lt;h3&gt;❌ Erreur de connexion&lt;/h3&gt;&#10;                        &lt;p&gt;Impossible de communiquer avec le serveur : ${error.message}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                `;&#10;                document.getElementById('result').style.display = 'block';&#10;            }&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>